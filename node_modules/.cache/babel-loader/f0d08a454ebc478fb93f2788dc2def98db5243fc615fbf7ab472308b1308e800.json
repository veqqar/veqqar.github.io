{"ast":null,"code":"var _jsxFileName = \"/home/johnlemon/portfolio/src/components/Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../assets/styles/App.css';\nimport Header from './Header';\nimport background from '../assets/imgs/background.mp4';\nimport profile from '../assets/imgs/cat.jpg';\nimport GrainOverlay from './GrainOverlay';\nimport Footer from './Footer';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [showWelcome, setShowWelcome] = useState(false);\n  useEffect(() => {\n    const videoElement = document.querySelector('video');\n    if (videoElement) {\n      videoElement.onloadeddata = () => {\n        setLoading(false);\n        setTimeout(() => {\n          setShowWelcome(true);\n        }, 1000); // Wait for 1 second before showing the welcome message\n      };\n\n      // Attempt to autoplay the video\n      const playPromise = videoElement.play();\n      if (playPromise !== undefined) {\n        playPromise.catch(error => {\n          console.log('Autoplay failed, requiring user interaction:', error);\n\n          // Add a user interaction fallback\n          const handleUserInteraction = () => {\n            videoElement.play();\n            document.removeEventListener('click', handleUserInteraction);\n            document.removeEventListener('touchstart', handleUserInteraction);\n          };\n          document.addEventListener('click', handleUserInteraction);\n          document.addEventListener('touchstart', handleUserInteraction);\n        });\n      }\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `home ${loading ? 'loading' : 'loaded'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      className: \"videoTag\",\n      autoPlay: true,\n      loop: true,\n      muted: true,\n      playsInline: true,\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        src: background,\n        type: \"video/mp4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), !loading && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(GrainOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: showWelcome && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"welcome\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: profile,\n              alt: \"Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Welcome to my website!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"I'm a web developer based in \", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"City, Country\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 50\n              }, this), \". I enjoy building things that live on the internet, whether that be websites, applications, or anything in between. My goal is to always build products that provide pixel-perfect, performant experiences.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"F+RLCnUXGAU3kDD+MDho4dShu/U=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","Header","background","profile","GrainOverlay","Footer","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","loading","setLoading","showWelcome","setShowWelcome","videoElement","document","querySelector","onloadeddata","setTimeout","playPromise","play","undefined","catch","error","console","log","handleUserInteraction","removeEventListener","addEventListener","className","children","autoPlay","loop","muted","playsInline","src","type","fileName","_jsxFileName","lineNumber","columnNumber","alt","_c","$RefreshReg$"],"sources":["/home/johnlemon/portfolio/src/components/Home.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../assets/styles/App.css';\nimport Header from './Header';\nimport background from '../assets/imgs/background.mp4';\nimport profile from '../assets/imgs/cat.jpg';\nimport GrainOverlay from './GrainOverlay';\nimport Footer from './Footer';\n\nconst Home = () => {\n  const [loading, setLoading] = useState(true);\n  const [showWelcome, setShowWelcome] = useState(false);\n\n  useEffect(() => {\n    const videoElement = document.querySelector('video');\n    if (videoElement) {\n      videoElement.onloadeddata = () => {\n        setLoading(false);\n        setTimeout(() => {\n          setShowWelcome(true);\n        }, 1000); // Wait for 1 second before showing the welcome message\n      };\n\n      // Attempt to autoplay the video\n      const playPromise = videoElement.play();\n      if (playPromise !== undefined) {\n        playPromise.catch((error) => {\n          console.log('Autoplay failed, requiring user interaction:', error);\n\n          // Add a user interaction fallback\n          const handleUserInteraction = () => {\n            videoElement.play();\n            document.removeEventListener('click', handleUserInteraction);\n            document.removeEventListener('touchstart', handleUserInteraction);\n          };\n\n          document.addEventListener('click', handleUserInteraction);\n          document.addEventListener('touchstart', handleUserInteraction);\n        });\n      }\n    }\n  }, []);\n\n  return (\n    <div className={`home ${loading ? 'loading' : 'loaded'}`}>\n      <video className='videoTag' autoPlay loop muted playsInline>\n        <source src={background} type='video/mp4' />\n      </video>\n      {!loading && (\n        <>\n          <Header />\n          <GrainOverlay />\n          <div className=\"content\">\n            {showWelcome && (\n              <div className=\"welcome\">\n                <div className=\"profile\">\n                  <img src={profile} alt=\"Profile\" />\n                </div>\n                <div>\n                  <h1>Welcome to my website!</h1>\n                  <p>\n                    I'm a web developer based in <b>City, Country</b>. I enjoy\n                    building things that live on the internet, whether that be\n                    websites, applications, or anything in between. My goal is\n                    to always build products that provide pixel-perfect,\n                    performant experiences.\n                  </p>\n                </div>\n              </div>\n            )}\n          </div>\n          {/* <Footer /> */}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}