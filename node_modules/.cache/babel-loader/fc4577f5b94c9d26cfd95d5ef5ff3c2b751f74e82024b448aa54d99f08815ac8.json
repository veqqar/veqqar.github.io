{"ast":null,"code":"var _jsxFileName = \"/home/johnlemon/portfolio/src/components/HomeCarousel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport section1Image from '../assets/imgs/carrousel_img_1.jpg';\nimport section2Image from '../assets/imgs/carrousel_img_2.jpg';\nimport section3Image from '../assets/imgs/carrousel_img_3.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sectionImages = [section1Image, section2Image, section3Image];\nconst NUM_STRIPS = 20;\nconst HomeCarousel = ({\n  section\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [image, setImage] = useState(null);\n  const animationRef = useRef(null);\n  const strips = useRef(Array(NUM_STRIPS).fill(1));\n  const isAnimating = useRef(false);\n\n  // Cargar imagen actual\n  useEffect(() => {\n    const img = new Image();\n    img.src = sectionImages[section];\n    img.onload = () => setImage(img);\n    img.onerror = e => console.error('Error loading image:', e);\n  }, [section]);\n\n  // Configurar canvas y animación\n  useEffect(() => {\n    if (!image) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d', {\n      willReadFrequently: true\n    });\n    const container = canvas.parentElement;\n    const setCanvasSize = () => {\n      canvas.width = container.clientWidth;\n      canvas.height = container.clientHeight;\n    };\n    setCanvasSize();\n    drawImage(ctx);\n    const resizeObserver = new ResizeObserver(setCanvasSize);\n    resizeObserver.observe(container);\n    return () => {\n      resizeObserver.disconnect();\n      cancelAnimationFrame(animationRef.current);\n    };\n  }, [image]);\n  const drawImage = ctx => {\n    if (!image || !ctx) return;\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    const stripWidth = ctx.canvas.width / NUM_STRIPS;\n\n    // Dibujar cada strip con su opacidad individual\n    strips.current.forEach((opacity, index) => {\n      ctx.globalAlpha = opacity;\n      ctx.drawImage(image, index * image.width / NUM_STRIPS,\n      // Source X\n      0,\n      // Source Y\n      image.width / NUM_STRIPS,\n      // Source width\n      image.height,\n      // Source height\n      index * stripWidth,\n      // Dest X\n      0,\n      // Dest Y\n      stripWidth,\n      // Dest width\n      ctx.canvas.height // Dest height\n      );\n    });\n  };\n  const startAnimation = () => {\n    if (isAnimating.current) return;\n    isAnimating.current = true;\n    const animate = startTime => {\n      var _canvasRef$current;\n      const ctx = (_canvasRef$current = canvasRef.current) === null || _canvasRef$current === void 0 ? void 0 : _canvasRef$current.getContext('2d');\n      if (!ctx) return;\n      const animationDuration = 1000;\n      const stripDelay = 50;\n      strips.current = strips.current.map((_, index) => {\n        const elapsed = performance.now() - startTime - index * stripDelay;\n        return Math.max(1 - elapsed / animationDuration, 0);\n      });\n      drawImage(ctx);\n      if (performance.now() - startTime < NUM_STRIPS * stripDelay + animationDuration) {\n        animationRef.current = requestAnimationFrame(() => animate(startTime));\n      } else {\n        isAnimating.current = false;\n        resetAnimation();\n      }\n    };\n    animationRef.current = requestAnimationFrame(() => animate(performance.now()));\n  };\n  const resetAnimation = () => {\n    var _canvasRef$current2;\n    strips.current = Array(NUM_STRIPS).fill(1);\n    const ctx = (_canvasRef$current2 = canvasRef.current) === null || _canvasRef$current2 === void 0 ? void 0 : _canvasRef$current2.getContext('2d');\n    if (ctx) drawImage(ctx);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home__carrousel\",\n    onClick: startAnimation,\n    style: {\n      cursor: 'pointer',\n      background: 'transparent',\n      position: 'relative'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        mixBlendMode: 'multiply',\n        background: 'transparent'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(HomeCarousel, \"iNFPqducsb3BiTQIf5nXT/63kFI=\");\n_c = HomeCarousel;\nexport default HomeCarousel;\nvar _c;\n$RefreshReg$(_c, \"HomeCarousel\");","map":{"version":3,"names":["React","useEffect","useRef","useState","section1Image","section2Image","section3Image","jsxDEV","_jsxDEV","sectionImages","NUM_STRIPS","HomeCarousel","section","_s","canvasRef","image","setImage","animationRef","strips","Array","fill","isAnimating","img","Image","src","onload","onerror","e","console","error","canvas","current","ctx","getContext","willReadFrequently","container","parentElement","setCanvasSize","width","clientWidth","height","clientHeight","drawImage","resizeObserver","ResizeObserver","observe","disconnect","cancelAnimationFrame","clearRect","stripWidth","forEach","opacity","index","globalAlpha","startAnimation","animate","startTime","_canvasRef$current","animationDuration","stripDelay","map","_","elapsed","performance","now","Math","max","requestAnimationFrame","resetAnimation","_canvasRef$current2","className","onClick","style","cursor","background","position","children","ref","mixBlendMode","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/johnlemon/portfolio/src/components/HomeCarousel.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport section1Image from '../assets/imgs/carrousel_img_1.jpg';\nimport section2Image from '../assets/imgs/carrousel_img_2.jpg';\nimport section3Image from '../assets/imgs/carrousel_img_3.jpg';\n\nconst sectionImages = [section1Image, section2Image, section3Image];\nconst NUM_STRIPS = 20;\n\nconst HomeCarousel = ({ section }) => {\n  const canvasRef = useRef(null);\n  const [image, setImage] = useState(null);\n  const animationRef = useRef(null);\n  const strips = useRef(Array(NUM_STRIPS).fill(1));\n  const isAnimating = useRef(false);\n\n  // Cargar imagen actual\n  useEffect(() => {\n    const img = new Image();\n    img.src = sectionImages[section];\n    img.onload = () => setImage(img);\n    img.onerror = (e) => console.error('Error loading image:', e);\n  }, [section]);\n\n  // Configurar canvas y animación\n  useEffect(() => {\n    if (!image) return;\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d', { willReadFrequently: true });\n    const container = canvas.parentElement;\n\n    const setCanvasSize = () => {\n      canvas.width = container.clientWidth;\n      canvas.height = container.clientHeight;\n    };\n\n    setCanvasSize();\n    drawImage(ctx);\n\n    const resizeObserver = new ResizeObserver(setCanvasSize);\n    resizeObserver.observe(container);\n\n    return () => {\n      resizeObserver.disconnect();\n      cancelAnimationFrame(animationRef.current);\n    };\n  }, [image]);\n\n  const drawImage = (ctx) => {\n    if (!image || !ctx) return;\n\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    const stripWidth = ctx.canvas.width / NUM_STRIPS;\n\n    // Dibujar cada strip con su opacidad individual\n    strips.current.forEach((opacity, index) => {\n      ctx.globalAlpha = opacity;\n      ctx.drawImage(\n        image,\n        (index * image.width) / NUM_STRIPS, // Source X\n        0, // Source Y\n        image.width / NUM_STRIPS, // Source width\n        image.height, // Source height\n        index * stripWidth, // Dest X\n        0, // Dest Y\n        stripWidth, // Dest width\n        ctx.canvas.height // Dest height\n      );\n    });\n  };\n\n  const startAnimation = () => {\n    if (isAnimating.current) return;\n    isAnimating.current = true;\n\n    const animate = (startTime) => {\n      const ctx = canvasRef.current?.getContext('2d');\n      if (!ctx) return;\n\n      const animationDuration = 1000;\n      const stripDelay = 50;\n\n      strips.current = strips.current.map((_, index) => {\n        const elapsed = performance.now() - startTime - index * stripDelay;\n        return Math.max(1 - (elapsed / animationDuration), 0);\n      });\n\n      drawImage(ctx);\n\n      if (performance.now() - startTime < (NUM_STRIPS * stripDelay) + animationDuration) {\n        animationRef.current = requestAnimationFrame(() => animate(startTime));\n      } else {\n        isAnimating.current = false;\n        resetAnimation();\n      }\n    };\n\n    animationRef.current = requestAnimationFrame(() => animate(performance.now()));\n  };\n\n  const resetAnimation = () => {\n    strips.current = Array(NUM_STRIPS).fill(1);\n    const ctx = canvasRef.current?.getContext('2d');\n    if (ctx) drawImage(ctx);\n  };\n\n  return (\n    <div \n      className=\"home__carrousel\" \n      onClick={startAnimation}\n      style={{ \n        cursor: 'pointer',\n        background: 'transparent',\n        position: 'relative'\n      }}\n    >\n      <canvas \n        ref={canvasRef}\n        style={{ \n          mixBlendMode: 'multiply',\n          background: 'transparent'\n        }}\n      />\n    </div>\n  );\n};\n\nexport default HomeCarousel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}