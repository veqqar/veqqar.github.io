{"ast":null,"code":"var _jsxFileName = \"/home/johnlemon/portfolio/src/components/HomeCarousel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\n\n// Importar imágenes estáticas para cada sección\nimport section1Image from '../assets/imgs/carrousel_img_1.jpg';\nimport section2Image from '../assets/imgs/carrousel_img_2.jpg';\nimport section3Image from '../assets/imgs/carrousel_img_3.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sectionImages = {\n  1: section1Image,\n  2: section2Image,\n  3: section3Image\n};\nconst HomeCarousel = ({\n  section\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [currentImage, setCurrentImage] = useState(null);\n  const exitingStripsRef = useRef([]);\n  const animationRef = useRef(null);\n  const sectionNumber = section + 1;\n\n  // Cargar imagen inicial\n  useEffect(() => {\n    const img = new Image();\n    img.src = sectionImages[sectionNumber];\n    img.onload = () => setCurrentImage(img);\n  }, []);\n\n  // Manejar cambios de sección\n  useEffect(() => {\n    const img = new Image();\n    img.src = sectionImages[sectionNumber];\n    img.onload = () => {\n      const oldImage = currentImage;\n      setCurrentImage(img);\n      if (oldImage && canvasRef.current) {\n        createExitStrips(oldImage);\n      }\n    };\n  }, [section]);\n\n  // Crear tiras para animación de salida\n  const createExitStrips = oldImage => {\n    const canvas = canvasRef.current;\n    const tempCanvas = document.createElement('canvas');\n    const ctx = tempCanvas.getContext('2d');\n    tempCanvas.width = canvas.width;\n    tempCanvas.height = canvas.height;\n    ctx.drawImage(oldImage, 0, 0, canvas.width, canvas.height);\n    const stripWidth = canvas.width / 20;\n    const strips = [];\n    for (let i = 0; i < 20; i++) {\n      const stripCanvas = document.createElement('canvas');\n      stripCanvas.width = stripWidth;\n      stripCanvas.height = canvas.height;\n      const stripCtx = stripCanvas.getContext('2d');\n      stripCtx.drawImage(tempCanvas, i * stripWidth, 0, stripWidth, canvas.height, 0, 0, stripWidth, canvas.height);\n      strips.push({\n        canvas: stripCanvas,\n        opacity: 1,\n        startTime: null,\n        index: i\n      });\n    }\n    exitingStripsRef.current = strips;\n  };\n\n  // Bucle de animación\n  const animate = timestamp => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Dibujar imagen actual\n    if (currentImage) {\n      ctx.drawImage(currentImage, 0, 0, canvas.width, canvas.height);\n    }\n\n    // Animar tiras de salida\n    exitingStripsRef.current.forEach((strip, index) => {\n      if (!strip.startTime) {\n        strip.startTime = timestamp + index * 50; // Retardo entre tiras\n      }\n      if (timestamp >= strip.startTime) {\n        const progress = (timestamp - strip.startTime) / 500; // Duración 500ms\n        strip.opacity = Math.max(1 - progress, 0);\n      }\n      if (strip.opacity > 0) {\n        ctx.globalAlpha = strip.opacity;\n        ctx.drawImage(strip.canvas, strip.index * strip.canvas.width, 0);\n      }\n    });\n    ctx.globalAlpha = 1;\n    animationRef.current = requestAnimationFrame(animate);\n  };\n\n  // Configurar canvas y observador de redimensión\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    // Ajustar tamaño inicial\n    const container = canvas.parentElement;\n    canvas.width = container.clientWidth;\n    canvas.height = container.clientHeight;\n\n    // Observador de redimensión\n    const resizeObserver = new ResizeObserver(entries => {\n      for (const entry of entries) {\n        canvas.width = entry.contentRect.width;\n        canvas.height = entry.contentRect.height;\n      }\n    });\n    resizeObserver.observe(container);\n    animationRef.current = requestAnimationFrame(animate);\n    return () => {\n      resizeObserver.unobserve(container);\n      cancelAnimationFrame(animationRef.current);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home__carrousel\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      className: \"home__carrousel__canvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n_s(HomeCarousel, \"0e1mEnkRjRFxfshTMb6OFYfw1yA=\");\n_c = HomeCarousel;\nexport default HomeCarousel;\nvar _c;\n$RefreshReg$(_c, \"HomeCarousel\");","map":{"version":3,"names":["React","useEffect","useRef","useState","section1Image","section2Image","section3Image","jsxDEV","_jsxDEV","sectionImages","HomeCarousel","section","_s","canvasRef","currentImage","setCurrentImage","exitingStripsRef","animationRef","sectionNumber","img","Image","src","onload","oldImage","current","createExitStrips","canvas","tempCanvas","document","createElement","ctx","getContext","width","height","drawImage","stripWidth","strips","i","stripCanvas","stripCtx","push","opacity","startTime","index","animate","timestamp","clearRect","forEach","strip","progress","Math","max","globalAlpha","requestAnimationFrame","container","parentElement","clientWidth","clientHeight","resizeObserver","ResizeObserver","entries","entry","contentRect","observe","unobserve","cancelAnimationFrame","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/johnlemon/portfolio/src/components/HomeCarousel.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\n// Importar imágenes estáticas para cada sección\nimport section1Image from '../assets/imgs/carrousel_img_1.jpg';\nimport section2Image from '../assets/imgs/carrousel_img_2.jpg';\nimport section3Image from '../assets/imgs/carrousel_img_3.jpg';\n\nconst sectionImages = {\n  1: section1Image,\n  2: section2Image,\n  3: section3Image\n};\n\nconst HomeCarousel = ({ section }) => {\n  const canvasRef = useRef(null);\n  const [currentImage, setCurrentImage] = useState(null);\n  const exitingStripsRef = useRef([]);\n  const animationRef = useRef(null);\n  const sectionNumber = section + 1;\n\n  // Cargar imagen inicial\n  useEffect(() => {\n    const img = new Image();\n    img.src = sectionImages[sectionNumber];\n    img.onload = () => setCurrentImage(img);\n  }, []);\n\n  // Manejar cambios de sección\n  useEffect(() => {\n    const img = new Image();\n    img.src = sectionImages[sectionNumber];\n    \n    img.onload = () => {\n      const oldImage = currentImage;\n      setCurrentImage(img);\n      \n      if (oldImage && canvasRef.current) {\n        createExitStrips(oldImage);\n      }\n    };\n  }, [section]);\n\n  // Crear tiras para animación de salida\n  const createExitStrips = (oldImage) => {\n    const canvas = canvasRef.current;\n    const tempCanvas = document.createElement('canvas');\n    const ctx = tempCanvas.getContext('2d');\n    \n    tempCanvas.width = canvas.width;\n    tempCanvas.height = canvas.height;\n    ctx.drawImage(oldImage, 0, 0, canvas.width, canvas.height);\n\n    const stripWidth = canvas.width / 20;\n    const strips = [];\n    \n    for (let i = 0; i < 20; i++) {\n      const stripCanvas = document.createElement('canvas');\n      stripCanvas.width = stripWidth;\n      stripCanvas.height = canvas.height;\n      \n      const stripCtx = stripCanvas.getContext('2d');\n      stripCtx.drawImage(\n        tempCanvas,\n        i * stripWidth, 0, stripWidth, canvas.height,\n        0, 0, stripWidth, canvas.height\n      );\n      \n      strips.push({\n        canvas: stripCanvas,\n        opacity: 1,\n        startTime: null,\n        index: i\n      });\n    }\n    \n    exitingStripsRef.current = strips;\n  };\n\n  // Bucle de animación\n  const animate = (timestamp) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Dibujar imagen actual\n    if (currentImage) {\n      ctx.drawImage(currentImage, 0, 0, canvas.width, canvas.height);\n    }\n\n    // Animar tiras de salida\n    exitingStripsRef.current.forEach((strip, index) => {\n      if (!strip.startTime) {\n        strip.startTime = timestamp + index * 50; // Retardo entre tiras\n      }\n\n      if (timestamp >= strip.startTime) {\n        const progress = (timestamp - strip.startTime) / 500; // Duración 500ms\n        strip.opacity = Math.max(1 - progress, 0);\n      }\n\n      if (strip.opacity > 0) {\n        ctx.globalAlpha = strip.opacity;\n        ctx.drawImage(\n          strip.canvas,\n          strip.index * strip.canvas.width, 0\n        );\n      }\n    });\n\n    ctx.globalAlpha = 1;\n    animationRef.current = requestAnimationFrame(animate);\n  };\n\n  // Configurar canvas y observador de redimensión\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    // Ajustar tamaño inicial\n    const container = canvas.parentElement;\n    canvas.width = container.clientWidth;\n    canvas.height = container.clientHeight;\n\n    // Observador de redimensión\n    const resizeObserver = new ResizeObserver((entries) => {\n      for (const entry of entries) {\n        canvas.width = entry.contentRect.width;\n        canvas.height = entry.contentRect.height;\n      }\n    });\n\n    resizeObserver.observe(container);\n    animationRef.current = requestAnimationFrame(animate);\n\n    return () => {\n      resizeObserver.unobserve(container);\n      cancelAnimationFrame(animationRef.current);\n    };\n  }, []);\n\n  return (\n    <div className=\"home__carrousel\">\n      <canvas ref={canvasRef} className=\"home__carrousel__canvas\" />\n    </div>\n  );\n};\n\nexport default HomeCarousel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}