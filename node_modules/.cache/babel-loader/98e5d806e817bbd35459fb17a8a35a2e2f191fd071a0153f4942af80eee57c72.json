{"ast":null,"code":"var _jsxFileName = \"/home/johnlemon/portfolio/src/components/HomeCarousel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport section1Image from '../assets/imgs/carrousel_img_1.jpg';\nimport section2Image from '../assets/imgs/carrousel_img_2.jpg';\nimport section3Image from '../assets/imgs/carrousel_img_3.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sectionImages = [section1Image, section2Image, section3Image];\nconst NUM_STRIPS = 20;\nconst ANIMATION_DURATION = 500;\nconst STRIP_DELAY = 30;\nconst EFFECT_RADIUS = 3;\nconst HomeCarousel = ({\n  section\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [image, setImage] = useState(null);\n  const [hoveredStrip, setHoveredStrip] = useState(null);\n  const animationRef = useRef(null);\n  const stripsProgress = useRef(Array(NUM_STRIPS).fill(0));\n  const effectIntensity = useRef(Array(NUM_STRIPS).fill(0));\n  const isAnimating = useRef(false);\n  const currentStrip = useRef(null);\n  const offscreenCanvas = useRef(document.createElement('canvas'));\n\n  // Cargar imagen actual\n  useEffect(() => {\n    const img = new Image();\n    img.src = sectionImages[section];\n    img.onload = () => {\n      setImage(img);\n      drawInitialState();\n    };\n    img.onerror = e => console.error('Error loading image:', e);\n  }, [section]);\n  const drawInitialState = () => {\n    var _canvasRef$current;\n    const ctx = (_canvasRef$current = canvasRef.current) === null || _canvasRef$current === void 0 ? void 0 : _canvasRef$current.getContext('2d');\n    if (!ctx) return;\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    stripsProgress.current = Array(NUM_STRIPS).fill(0);\n    drawImage(ctx);\n  };\n\n  // Configurar canvas y buffers\n  useEffect(() => {\n    if (!image) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d', {\n      alpha: true\n    });\n    const offCtx = offscreenCanvas.current.getContext('2d');\n    const setupCanvas = () => {\n      const container = canvas.parentElement;\n      canvas.width = container.clientWidth * 2;\n      canvas.height = container.clientHeight * 2;\n      canvas.style.width = `${container.clientWidth}px`;\n      canvas.style.height = `${container.clientHeight}px`;\n      offscreenCanvas.current.width = canvas.width;\n      offscreenCanvas.current.height = canvas.height;\n    };\n    setupCanvas();\n    let animationFrameId;\n    const animate = () => {\n      // Suavizar transición del efecto\n      effectIntensity.current = effectIntensity.current.map((intensity, index) => {\n        const target = hoveredStrip !== null && Math.abs(index - currentStrip.current) <= EFFECT_RADIUS ? 1 - Math.abs(index - currentStrip.current) * 0.25 : 0;\n        return intensity + (target - intensity) * 0.15;\n      });\n      drawImage(ctx);\n      animationFrameId = requestAnimationFrame(animate);\n    };\n    animate();\n    const resizeObserver = new ResizeObserver(setupCanvas);\n    resizeObserver.observe(canvas.parentElement);\n    return () => {\n      resizeObserver.disconnect();\n      cancelAnimationFrame(animationFrameId);\n    };\n  }, [image, hoveredStrip]);\n  const applyEffects = (ctx, index, intensity) => {\n    if (intensity <= 0) return;\n    const stripWidth = ctx.canvas.width / NUM_STRIPS;\n    const centerX = index * stripWidth + stripWidth / 2;\n    const centerY = ctx.canvas.height / 2;\n\n    // Blur\n    const blurAmount = intensity * 8;\n    for (let i = 0; i < blurAmount; i++) {\n      ctx.filter = `opacity(${0.3}) blur(${blurAmount}px)`;\n      ctx.drawImage(offscreenCanvas.current, index * stripWidth, 0, stripWidth, ctx.canvas.height, index * stripWidth - blurAmount / 2, 0, stripWidth + blurAmount, ctx.canvas.height);\n    }\n\n    // Transformaciones\n    ctx.save();\n    ctx.translate(centerX, centerY);\n    ctx.rotate(-intensity * 0.03);\n    ctx.scale(1 + intensity * 0.1, 1 + intensity * 0.05);\n    ctx.translate(-centerX, -centerY);\n    ctx.drawImage(offscreenCanvas.current, index * stripWidth, 0, stripWidth, ctx.canvas.height, index * stripWidth, 0, stripWidth, ctx.canvas.height);\n    ctx.restore();\n  };\n  const drawImage = ctx => {\n    if (!image || !ctx) return;\n    const offCtx = offscreenCanvas.current.getContext('2d');\n\n    // Dibujar en canvas offscreen\n    offCtx.clearRect(0, 0, offscreenCanvas.current.width, offscreenCanvas.current.height);\n    offCtx.drawImage(image, 0, 0, offscreenCanvas.current.width, offscreenCanvas.current.height);\n\n    // Limpiar canvas principal\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n    // Dibujar strips con efectos\n    const stripWidth = ctx.canvas.width / NUM_STRIPS;\n    for (let index = 0; index < NUM_STRIPS; index++) {\n      ctx.save();\n\n      // Máscara de recorte\n      ctx.beginPath();\n      ctx.rect(index * stripWidth, 0, stripWidth * stripsProgress.current[index], ctx.canvas.height);\n      ctx.clip();\n\n      // Aplicar efectos\n      applyEffects(ctx, index, effectIntensity.current[index]);\n      ctx.restore();\n    }\n  };\n  const handleMouseMove = e => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const rect = canvas.getBoundingClientRect();\n    const x = (e.clientX - rect.left) * (canvas.width / canvas.clientWidth);\n    const stripIndex = Math.floor(x / (canvas.width / NUM_STRIPS));\n    currentStrip.current = Math.min(Math.max(stripIndex, 0), NUM_STRIPS - 1);\n    setHoveredStrip(currentStrip.current);\n  };\n  const startAnimation = () => {\n    if (isAnimating.current) return;\n    isAnimating.current = true;\n    const animate = startTime => {\n      var _canvasRef$current2;\n      const ctx = (_canvasRef$current2 = canvasRef.current) === null || _canvasRef$current2 === void 0 ? void 0 : _canvasRef$current2.getContext('2d');\n      if (!ctx) return;\n      stripsProgress.current = stripsProgress.current.map((_, index) => {\n        const elapsed = performance.now() - startTime - index * STRIP_DELAY;\n        const rawProgress = Math.min(elapsed / ANIMATION_DURATION, 1);\n        return 1 - Math.pow(1 - rawProgress, 3);\n      });\n      if (performance.now() - startTime < NUM_STRIPS * STRIP_DELAY + ANIMATION_DURATION) {\n        animationRef.current = requestAnimationFrame(() => animate(startTime));\n      } else {\n        isAnimating.current = false;\n        stripsProgress.current = Array(NUM_STRIPS).fill(1);\n      }\n    };\n    animationRef.current = requestAnimationFrame(() => animate(performance.now()));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home__carrousel\",\n    onClick: startAnimation,\n    onMouseMove: handleMouseMove,\n    onMouseLeave: () => setHoveredStrip(null),\n    style: {\n      position: 'relative',\n      cursor: 'pointer',\n      background: 'transparent',\n      overflow: 'hidden'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        background: 'transparent',\n        imageRendering: 'auto'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 5\n  }, this);\n};\n_s(HomeCarousel, \"ljwwR3Z8GxodpQvouhlAQGIwoJY=\");\n_c = HomeCarousel;\nexport default HomeCarousel;\nvar _c;\n$RefreshReg$(_c, \"HomeCarousel\");","map":{"version":3,"names":["React","useEffect","useRef","useState","section1Image","section2Image","section3Image","jsxDEV","_jsxDEV","sectionImages","NUM_STRIPS","ANIMATION_DURATION","STRIP_DELAY","EFFECT_RADIUS","HomeCarousel","section","_s","canvasRef","image","setImage","hoveredStrip","setHoveredStrip","animationRef","stripsProgress","Array","fill","effectIntensity","isAnimating","currentStrip","offscreenCanvas","document","createElement","img","Image","src","onload","drawInitialState","onerror","e","console","error","_canvasRef$current","ctx","current","getContext","clearRect","canvas","width","height","drawImage","alpha","offCtx","setupCanvas","container","parentElement","clientWidth","clientHeight","style","animationFrameId","animate","map","intensity","index","target","Math","abs","requestAnimationFrame","resizeObserver","ResizeObserver","observe","disconnect","cancelAnimationFrame","applyEffects","stripWidth","centerX","centerY","blurAmount","i","filter","save","translate","rotate","scale","restore","beginPath","rect","clip","handleMouseMove","getBoundingClientRect","x","clientX","left","stripIndex","floor","min","max","startAnimation","startTime","_canvasRef$current2","_","elapsed","performance","now","rawProgress","pow","className","onClick","onMouseMove","onMouseLeave","position","cursor","background","overflow","children","ref","imageRendering","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/johnlemon/portfolio/src/components/HomeCarousel.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport section1Image from '../assets/imgs/carrousel_img_1.jpg';\nimport section2Image from '../assets/imgs/carrousel_img_2.jpg';\nimport section3Image from '../assets/imgs/carrousel_img_3.jpg';\n\nconst sectionImages = [section1Image, section2Image, section3Image];\nconst NUM_STRIPS = 20;\nconst ANIMATION_DURATION = 500;\nconst STRIP_DELAY = 30;\nconst EFFECT_RADIUS = 3;\n\nconst HomeCarousel = ({ section }) => {\n  const canvasRef = useRef(null);\n  const [image, setImage] = useState(null);\n  const [hoveredStrip, setHoveredStrip] = useState(null);\n  const animationRef = useRef(null);\n  const stripsProgress = useRef(Array(NUM_STRIPS).fill(0));\n  const effectIntensity = useRef(Array(NUM_STRIPS).fill(0));\n  const isAnimating = useRef(false);\n  const currentStrip = useRef(null);\n  const offscreenCanvas = useRef(document.createElement('canvas'));\n\n  // Cargar imagen actual\n  useEffect(() => {\n    const img = new Image();\n    img.src = sectionImages[section];\n    img.onload = () => {\n      setImage(img);\n      drawInitialState();\n    };\n    img.onerror = (e) => console.error('Error loading image:', e);\n  }, [section]);\n\n  const drawInitialState = () => {\n    const ctx = canvasRef.current?.getContext('2d');\n    if (!ctx) return;\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    stripsProgress.current = Array(NUM_STRIPS).fill(0);\n    drawImage(ctx);\n  };\n\n  // Configurar canvas y buffers\n  useEffect(() => {\n    if (!image) return;\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d', { alpha: true });\n    const offCtx = offscreenCanvas.current.getContext('2d');\n    \n    const setupCanvas = () => {\n      const container = canvas.parentElement;\n      canvas.width = container.clientWidth * 2;\n      canvas.height = container.clientHeight * 2;\n      canvas.style.width = `${container.clientWidth}px`;\n      canvas.style.height = `${container.clientHeight}px`;\n      \n      offscreenCanvas.current.width = canvas.width;\n      offscreenCanvas.current.height = canvas.height;\n    };\n\n    setupCanvas();\n    \n    let animationFrameId;\n    const animate = () => {\n      // Suavizar transición del efecto\n      effectIntensity.current = effectIntensity.current.map((intensity, index) => {\n        const target = hoveredStrip !== null && \n          Math.abs(index - currentStrip.current) <= EFFECT_RADIUS ? \n          1 - (Math.abs(index - currentStrip.current) * 0.25) : 0;\n        return intensity + (target - intensity) * 0.15;\n      });\n      \n      drawImage(ctx);\n      animationFrameId = requestAnimationFrame(animate);\n    };\n    \n    animate();\n    \n    const resizeObserver = new ResizeObserver(setupCanvas);\n    resizeObserver.observe(canvas.parentElement);\n\n    return () => {\n      resizeObserver.disconnect();\n      cancelAnimationFrame(animationFrameId);\n    };\n  }, [image, hoveredStrip]);\n\n  const applyEffects = (ctx, index, intensity) => {\n    if (intensity <= 0) return;\n    \n    const stripWidth = ctx.canvas.width / NUM_STRIPS;\n    const centerX = index * stripWidth + stripWidth / 2;\n    const centerY = ctx.canvas.height / 2;\n    \n    // Blur\n    const blurAmount = intensity * 8;\n    for(let i = 0; i < blurAmount; i++) {\n      ctx.filter = `opacity(${0.3}) blur(${blurAmount}px)`;\n      ctx.drawImage(\n        offscreenCanvas.current,\n        index * stripWidth, 0, stripWidth, ctx.canvas.height,\n        index * stripWidth - blurAmount/2, 0,\n        stripWidth + blurAmount, ctx.canvas.height\n      );\n    }\n    \n    // Transformaciones\n    ctx.save();\n    ctx.translate(centerX, centerY);\n    ctx.rotate(-intensity * 0.03);\n    ctx.scale(1 + intensity * 0.1, 1 + intensity * 0.05);\n    ctx.translate(-centerX, -centerY);\n    \n    ctx.drawImage(\n      offscreenCanvas.current,\n      index * stripWidth, 0, stripWidth, ctx.canvas.height,\n      index * stripWidth, 0, stripWidth, ctx.canvas.height\n    );\n    \n    ctx.restore();\n  };\n\n  const drawImage = (ctx) => {\n    if (!image || !ctx) return;\n\n    const offCtx = offscreenCanvas.current.getContext('2d');\n    \n    // Dibujar en canvas offscreen\n    offCtx.clearRect(0, 0, offscreenCanvas.current.width, offscreenCanvas.current.height);\n    offCtx.drawImage(image, 0, 0, offscreenCanvas.current.width, offscreenCanvas.current.height);\n    \n    // Limpiar canvas principal\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    \n    // Dibujar strips con efectos\n    const stripWidth = ctx.canvas.width / NUM_STRIPS;\n    \n    for(let index = 0; index < NUM_STRIPS; index++) {\n      ctx.save();\n      \n      // Máscara de recorte\n      ctx.beginPath();\n      ctx.rect(\n        index * stripWidth,\n        0,\n        stripWidth * stripsProgress.current[index],\n        ctx.canvas.height\n      );\n      ctx.clip();\n      \n      // Aplicar efectos\n      applyEffects(ctx, index, effectIntensity.current[index]);\n      \n      ctx.restore();\n    }\n  };\n\n  const handleMouseMove = (e) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    \n    const rect = canvas.getBoundingClientRect();\n    const x = (e.clientX - rect.left) * (canvas.width / canvas.clientWidth);\n    const stripIndex = Math.floor(x / (canvas.width / NUM_STRIPS));\n    \n    currentStrip.current = Math.min(Math.max(stripIndex, 0), NUM_STRIPS - 1);\n    setHoveredStrip(currentStrip.current);\n  };\n\n  const startAnimation = () => {\n    if (isAnimating.current) return;\n    isAnimating.current = true;\n\n    const animate = (startTime) => {\n      const ctx = canvasRef.current?.getContext('2d');\n      if (!ctx) return;\n\n      stripsProgress.current = stripsProgress.current.map((_, index) => {\n        const elapsed = performance.now() - startTime - (index * STRIP_DELAY);\n        const rawProgress = Math.min(elapsed / ANIMATION_DURATION, 1);\n        return 1 - Math.pow(1 - rawProgress, 3);\n      });\n\n      if (performance.now() - startTime < (NUM_STRIPS * STRIP_DELAY) + ANIMATION_DURATION) {\n        animationRef.current = requestAnimationFrame(() => animate(startTime));\n      } else {\n        isAnimating.current = false;\n        stripsProgress.current = Array(NUM_STRIPS).fill(1);\n      }\n    };\n\n    animationRef.current = requestAnimationFrame(() => animate(performance.now()));\n  };\n\n  return (\n    <div \n      className=\"home__carrousel\" \n      onClick={startAnimation}\n      onMouseMove={handleMouseMove}\n      onMouseLeave={() => setHoveredStrip(null)}\n      style={{ \n        position: 'relative',\n        cursor: 'pointer',\n        background: 'transparent',\n        overflow: 'hidden'\n      }}\n    >\n      <canvas \n        ref={canvasRef}\n        style={{ \n          background: 'transparent',\n          imageRendering: 'auto'\n        }}\n      />\n    </div>\n  );\n};\n\nexport default HomeCarousel;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,aAAa,MAAM,oCAAoC;AAC9D,OAAOC,aAAa,MAAM,oCAAoC;AAC9D,OAAOC,aAAa,MAAM,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,MAAMC,aAAa,GAAG,CAACL,aAAa,EAAEC,aAAa,EAAEC,aAAa,CAAC;AACnE,MAAMI,UAAU,GAAG,EAAE;AACrB,MAAMC,kBAAkB,GAAG,GAAG;AAC9B,MAAMC,WAAW,GAAG,EAAE;AACtB,MAAMC,aAAa,GAAG,CAAC;AAEvB,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAMC,SAAS,GAAGf,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACiB,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAMmB,YAAY,GAAGpB,MAAM,CAAC,IAAI,CAAC;EACjC,MAAMqB,cAAc,GAAGrB,MAAM,CAACsB,KAAK,CAACd,UAAU,CAAC,CAACe,IAAI,CAAC,CAAC,CAAC,CAAC;EACxD,MAAMC,eAAe,GAAGxB,MAAM,CAACsB,KAAK,CAACd,UAAU,CAAC,CAACe,IAAI,CAAC,CAAC,CAAC,CAAC;EACzD,MAAME,WAAW,GAAGzB,MAAM,CAAC,KAAK,CAAC;EACjC,MAAM0B,YAAY,GAAG1B,MAAM,CAAC,IAAI,CAAC;EACjC,MAAM2B,eAAe,GAAG3B,MAAM,CAAC4B,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC,CAAC;;EAEhE;EACA9B,SAAS,CAAC,MAAM;IACd,MAAM+B,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;IACvBD,GAAG,CAACE,GAAG,GAAGzB,aAAa,CAACM,OAAO,CAAC;IAChCiB,GAAG,CAACG,MAAM,GAAG,MAAM;MACjBhB,QAAQ,CAACa,GAAG,CAAC;MACbI,gBAAgB,CAAC,CAAC;IACpB,CAAC;IACDJ,GAAG,CAACK,OAAO,GAAIC,CAAC,IAAKC,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEF,CAAC,CAAC;EAC/D,CAAC,EAAE,CAACvB,OAAO,CAAC,CAAC;EAEb,MAAMqB,gBAAgB,GAAGA,CAAA,KAAM;IAAA,IAAAK,kBAAA;IAC7B,MAAMC,GAAG,IAAAD,kBAAA,GAAGxB,SAAS,CAAC0B,OAAO,cAAAF,kBAAA,uBAAjBA,kBAAA,CAAmBG,UAAU,CAAC,IAAI,CAAC;IAC/C,IAAI,CAACF,GAAG,EAAE;IACVA,GAAG,CAACG,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEH,GAAG,CAACI,MAAM,CAACC,KAAK,EAAEL,GAAG,CAACI,MAAM,CAACE,MAAM,CAAC;IACxDzB,cAAc,CAACoB,OAAO,GAAGnB,KAAK,CAACd,UAAU,CAAC,CAACe,IAAI,CAAC,CAAC,CAAC;IAClDwB,SAAS,CAACP,GAAG,CAAC;EAChB,CAAC;;EAED;EACAzC,SAAS,CAAC,MAAM;IACd,IAAI,CAACiB,KAAK,EAAE;IAEZ,MAAM4B,MAAM,GAAG7B,SAAS,CAAC0B,OAAO;IAChC,MAAMD,GAAG,GAAGI,MAAM,CAACF,UAAU,CAAC,IAAI,EAAE;MAAEM,KAAK,EAAE;IAAK,CAAC,CAAC;IACpD,MAAMC,MAAM,GAAGtB,eAAe,CAACc,OAAO,CAACC,UAAU,CAAC,IAAI,CAAC;IAEvD,MAAMQ,WAAW,GAAGA,CAAA,KAAM;MACxB,MAAMC,SAAS,GAAGP,MAAM,CAACQ,aAAa;MACtCR,MAAM,CAACC,KAAK,GAAGM,SAAS,CAACE,WAAW,GAAG,CAAC;MACxCT,MAAM,CAACE,MAAM,GAAGK,SAAS,CAACG,YAAY,GAAG,CAAC;MAC1CV,MAAM,CAACW,KAAK,CAACV,KAAK,GAAI,GAAEM,SAAS,CAACE,WAAY,IAAG;MACjDT,MAAM,CAACW,KAAK,CAACT,MAAM,GAAI,GAAEK,SAAS,CAACG,YAAa,IAAG;MAEnD3B,eAAe,CAACc,OAAO,CAACI,KAAK,GAAGD,MAAM,CAACC,KAAK;MAC5ClB,eAAe,CAACc,OAAO,CAACK,MAAM,GAAGF,MAAM,CAACE,MAAM;IAChD,CAAC;IAEDI,WAAW,CAAC,CAAC;IAEb,IAAIM,gBAAgB;IACpB,MAAMC,OAAO,GAAGA,CAAA,KAAM;MACpB;MACAjC,eAAe,CAACiB,OAAO,GAAGjB,eAAe,CAACiB,OAAO,CAACiB,GAAG,CAAC,CAACC,SAAS,EAAEC,KAAK,KAAK;QAC1E,MAAMC,MAAM,GAAG3C,YAAY,KAAK,IAAI,IAClC4C,IAAI,CAACC,GAAG,CAACH,KAAK,GAAGlC,YAAY,CAACe,OAAO,CAAC,IAAI9B,aAAa,GACvD,CAAC,GAAImD,IAAI,CAACC,GAAG,CAACH,KAAK,GAAGlC,YAAY,CAACe,OAAO,CAAC,GAAG,IAAK,GAAG,CAAC;QACzD,OAAOkB,SAAS,GAAG,CAACE,MAAM,GAAGF,SAAS,IAAI,IAAI;MAChD,CAAC,CAAC;MAEFZ,SAAS,CAACP,GAAG,CAAC;MACdgB,gBAAgB,GAAGQ,qBAAqB,CAACP,OAAO,CAAC;IACnD,CAAC;IAEDA,OAAO,CAAC,CAAC;IAET,MAAMQ,cAAc,GAAG,IAAIC,cAAc,CAAChB,WAAW,CAAC;IACtDe,cAAc,CAACE,OAAO,CAACvB,MAAM,CAACQ,aAAa,CAAC;IAE5C,OAAO,MAAM;MACXa,cAAc,CAACG,UAAU,CAAC,CAAC;MAC3BC,oBAAoB,CAACb,gBAAgB,CAAC;IACxC,CAAC;EACH,CAAC,EAAE,CAACxC,KAAK,EAAEE,YAAY,CAAC,CAAC;EAEzB,MAAMoD,YAAY,GAAGA,CAAC9B,GAAG,EAAEoB,KAAK,EAAED,SAAS,KAAK;IAC9C,IAAIA,SAAS,IAAI,CAAC,EAAE;IAEpB,MAAMY,UAAU,GAAG/B,GAAG,CAACI,MAAM,CAACC,KAAK,GAAGrC,UAAU;IAChD,MAAMgE,OAAO,GAAGZ,KAAK,GAAGW,UAAU,GAAGA,UAAU,GAAG,CAAC;IACnD,MAAME,OAAO,GAAGjC,GAAG,CAACI,MAAM,CAACE,MAAM,GAAG,CAAC;;IAErC;IACA,MAAM4B,UAAU,GAAGf,SAAS,GAAG,CAAC;IAChC,KAAI,IAAIgB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,UAAU,EAAEC,CAAC,EAAE,EAAE;MAClCnC,GAAG,CAACoC,MAAM,GAAI,WAAU,GAAI,UAASF,UAAW,KAAI;MACpDlC,GAAG,CAACO,SAAS,CACXpB,eAAe,CAACc,OAAO,EACvBmB,KAAK,GAAGW,UAAU,EAAE,CAAC,EAAEA,UAAU,EAAE/B,GAAG,CAACI,MAAM,CAACE,MAAM,EACpDc,KAAK,GAAGW,UAAU,GAAGG,UAAU,GAAC,CAAC,EAAE,CAAC,EACpCH,UAAU,GAAGG,UAAU,EAAElC,GAAG,CAACI,MAAM,CAACE,MACtC,CAAC;IACH;;IAEA;IACAN,GAAG,CAACqC,IAAI,CAAC,CAAC;IACVrC,GAAG,CAACsC,SAAS,CAACN,OAAO,EAAEC,OAAO,CAAC;IAC/BjC,GAAG,CAACuC,MAAM,CAAC,CAACpB,SAAS,GAAG,IAAI,CAAC;IAC7BnB,GAAG,CAACwC,KAAK,CAAC,CAAC,GAAGrB,SAAS,GAAG,GAAG,EAAE,CAAC,GAAGA,SAAS,GAAG,IAAI,CAAC;IACpDnB,GAAG,CAACsC,SAAS,CAAC,CAACN,OAAO,EAAE,CAACC,OAAO,CAAC;IAEjCjC,GAAG,CAACO,SAAS,CACXpB,eAAe,CAACc,OAAO,EACvBmB,KAAK,GAAGW,UAAU,EAAE,CAAC,EAAEA,UAAU,EAAE/B,GAAG,CAACI,MAAM,CAACE,MAAM,EACpDc,KAAK,GAAGW,UAAU,EAAE,CAAC,EAAEA,UAAU,EAAE/B,GAAG,CAACI,MAAM,CAACE,MAChD,CAAC;IAEDN,GAAG,CAACyC,OAAO,CAAC,CAAC;EACf,CAAC;EAED,MAAMlC,SAAS,GAAIP,GAAG,IAAK;IACzB,IAAI,CAACxB,KAAK,IAAI,CAACwB,GAAG,EAAE;IAEpB,MAAMS,MAAM,GAAGtB,eAAe,CAACc,OAAO,CAACC,UAAU,CAAC,IAAI,CAAC;;IAEvD;IACAO,MAAM,CAACN,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEhB,eAAe,CAACc,OAAO,CAACI,KAAK,EAAElB,eAAe,CAACc,OAAO,CAACK,MAAM,CAAC;IACrFG,MAAM,CAACF,SAAS,CAAC/B,KAAK,EAAE,CAAC,EAAE,CAAC,EAAEW,eAAe,CAACc,OAAO,CAACI,KAAK,EAAElB,eAAe,CAACc,OAAO,CAACK,MAAM,CAAC;;IAE5F;IACAN,GAAG,CAACG,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEH,GAAG,CAACI,MAAM,CAACC,KAAK,EAAEL,GAAG,CAACI,MAAM,CAACE,MAAM,CAAC;;IAExD;IACA,MAAMyB,UAAU,GAAG/B,GAAG,CAACI,MAAM,CAACC,KAAK,GAAGrC,UAAU;IAEhD,KAAI,IAAIoD,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGpD,UAAU,EAAEoD,KAAK,EAAE,EAAE;MAC9CpB,GAAG,CAACqC,IAAI,CAAC,CAAC;;MAEV;MACArC,GAAG,CAAC0C,SAAS,CAAC,CAAC;MACf1C,GAAG,CAAC2C,IAAI,CACNvB,KAAK,GAAGW,UAAU,EAClB,CAAC,EACDA,UAAU,GAAGlD,cAAc,CAACoB,OAAO,CAACmB,KAAK,CAAC,EAC1CpB,GAAG,CAACI,MAAM,CAACE,MACb,CAAC;MACDN,GAAG,CAAC4C,IAAI,CAAC,CAAC;;MAEV;MACAd,YAAY,CAAC9B,GAAG,EAAEoB,KAAK,EAAEpC,eAAe,CAACiB,OAAO,CAACmB,KAAK,CAAC,CAAC;MAExDpB,GAAG,CAACyC,OAAO,CAAC,CAAC;IACf;EACF,CAAC;EAED,MAAMI,eAAe,GAAIjD,CAAC,IAAK;IAC7B,MAAMQ,MAAM,GAAG7B,SAAS,CAAC0B,OAAO;IAChC,IAAI,CAACG,MAAM,EAAE;IAEb,MAAMuC,IAAI,GAAGvC,MAAM,CAAC0C,qBAAqB,CAAC,CAAC;IAC3C,MAAMC,CAAC,GAAG,CAACnD,CAAC,CAACoD,OAAO,GAAGL,IAAI,CAACM,IAAI,KAAK7C,MAAM,CAACC,KAAK,GAAGD,MAAM,CAACS,WAAW,CAAC;IACvE,MAAMqC,UAAU,GAAG5B,IAAI,CAAC6B,KAAK,CAACJ,CAAC,IAAI3C,MAAM,CAACC,KAAK,GAAGrC,UAAU,CAAC,CAAC;IAE9DkB,YAAY,CAACe,OAAO,GAAGqB,IAAI,CAAC8B,GAAG,CAAC9B,IAAI,CAAC+B,GAAG,CAACH,UAAU,EAAE,CAAC,CAAC,EAAElF,UAAU,GAAG,CAAC,CAAC;IACxEW,eAAe,CAACO,YAAY,CAACe,OAAO,CAAC;EACvC,CAAC;EAED,MAAMqD,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAIrE,WAAW,CAACgB,OAAO,EAAE;IACzBhB,WAAW,CAACgB,OAAO,GAAG,IAAI;IAE1B,MAAMgB,OAAO,GAAIsC,SAAS,IAAK;MAAA,IAAAC,mBAAA;MAC7B,MAAMxD,GAAG,IAAAwD,mBAAA,GAAGjF,SAAS,CAAC0B,OAAO,cAAAuD,mBAAA,uBAAjBA,mBAAA,CAAmBtD,UAAU,CAAC,IAAI,CAAC;MAC/C,IAAI,CAACF,GAAG,EAAE;MAEVnB,cAAc,CAACoB,OAAO,GAAGpB,cAAc,CAACoB,OAAO,CAACiB,GAAG,CAAC,CAACuC,CAAC,EAAErC,KAAK,KAAK;QAChE,MAAMsC,OAAO,GAAGC,WAAW,CAACC,GAAG,CAAC,CAAC,GAAGL,SAAS,GAAInC,KAAK,GAAGlD,WAAY;QACrE,MAAM2F,WAAW,GAAGvC,IAAI,CAAC8B,GAAG,CAACM,OAAO,GAAGzF,kBAAkB,EAAE,CAAC,CAAC;QAC7D,OAAO,CAAC,GAAGqD,IAAI,CAACwC,GAAG,CAAC,CAAC,GAAGD,WAAW,EAAE,CAAC,CAAC;MACzC,CAAC,CAAC;MAEF,IAAIF,WAAW,CAACC,GAAG,CAAC,CAAC,GAAGL,SAAS,GAAIvF,UAAU,GAAGE,WAAW,GAAID,kBAAkB,EAAE;QACnFW,YAAY,CAACqB,OAAO,GAAGuB,qBAAqB,CAAC,MAAMP,OAAO,CAACsC,SAAS,CAAC,CAAC;MACxE,CAAC,MAAM;QACLtE,WAAW,CAACgB,OAAO,GAAG,KAAK;QAC3BpB,cAAc,CAACoB,OAAO,GAAGnB,KAAK,CAACd,UAAU,CAAC,CAACe,IAAI,CAAC,CAAC,CAAC;MACpD;IACF,CAAC;IAEDH,YAAY,CAACqB,OAAO,GAAGuB,qBAAqB,CAAC,MAAMP,OAAO,CAAC0C,WAAW,CAACC,GAAG,CAAC,CAAC,CAAC,CAAC;EAChF,CAAC;EAED,oBACE9F,OAAA;IACEiG,SAAS,EAAC,iBAAiB;IAC3BC,OAAO,EAAEV,cAAe;IACxBW,WAAW,EAAEpB,eAAgB;IAC7BqB,YAAY,EAAEA,CAAA,KAAMvF,eAAe,CAAC,IAAI,CAAE;IAC1CoC,KAAK,EAAE;MACLoD,QAAQ,EAAE,UAAU;MACpBC,MAAM,EAAE,SAAS;MACjBC,UAAU,EAAE,aAAa;MACzBC,QAAQ,EAAE;IACZ,CAAE;IAAAC,QAAA,eAEFzG,OAAA;MACE0G,GAAG,EAAEjG,SAAU;MACfwC,KAAK,EAAE;QACLsD,UAAU,EAAE,aAAa;QACzBI,cAAc,EAAE;MAClB;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACvG,EAAA,CA7MIF,YAAY;AAAA0G,EAAA,GAAZ1G,YAAY;AA+MlB,eAAeA,YAAY;AAAC,IAAA0G,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}