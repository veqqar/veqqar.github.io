{"ast":null,"code":"import React,{useState,useEffect}from'react';import GrainOverlay from'./GrainOverlay';import'../assets/styles/App.css';import glitch from'../assets/imgs/glitch.gif';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Preloader=()=>{const[closing,setClosing]=useState(false);const[showGif,setShowGif]=useState(false);// Estado para mostrar el GIF\nuseEffect(()=>{// Esperar 4 segundos antes de hacer el blur y cambiar la opacidad\nconst timeout=setTimeout(()=>{setClosing(true);// Cambia el estado para aplicar la animación de salida después de 4 segundos\n},4000);// Mostrar el GIF al final de la animación\nconst gifTimeout=setTimeout(()=>{setShowGif(true);// Cambia el estado para mostrar el GIF\n},5000);// Un segundo después del cierre (opcional)\n// Establece el comportamiento al cerrar o recargar la página\nconst handleBeforeUnload=()=>{setClosing(true);// Cambia el estado si la página se va a cerrar\n};// Detecta cuando la pestaña se va a cerrar o recargar\nwindow.addEventListener('beforeunload',handleBeforeUnload);// Limpiar los timeouts cuando el componente se desmonta\nreturn()=>{window.removeEventListener('beforeunload',handleBeforeUnload);clearTimeout(timeout);clearTimeout(gifTimeout);};},[]);return/*#__PURE__*/_jsx(_Fragment,{children:showGif?/*#__PURE__*/ // Mostrar el GIF al final\n_jsx(\"div\",{className:\"GifContainer\",children:/*#__PURE__*/_jsx(\"img\",{src:glitch,alt:\"glitch\"})}):/*#__PURE__*/ // Preloader con GrainOverlay siempre visible\n_jsxs(\"div\",{className:\"Preloader__Content \".concat(closing?'closing':''),children:[/*#__PURE__*/_jsx(GrainOverlay,{}),/*#__PURE__*/_jsx(\"div\",{className:\"Preloader__Container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"Preloader__Text\",children:[\"STANDBY..\",/*#__PURE__*/_jsx(\"span\",{className:\"blinking-dot\",children:\".\"})]})})]})});};export default Preloader;","map":{"version":3,"names":["React","useState","useEffect","GrainOverlay","glitch","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Preloader","closing","setClosing","showGif","setShowGif","timeout","setTimeout","gifTimeout","handleBeforeUnload","window","addEventListener","removeEventListener","clearTimeout","children","className","src","alt","concat"],"sources":["/home/johnlemon/portfolio/src/components/Preloader.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport GrainOverlay from './GrainOverlay';\nimport '../assets/styles/App.css';\nimport glitch from '../assets/imgs/glitch.gif';\n\nconst Preloader = () => {\n  const [closing, setClosing] = useState(false);\n  const [showGif, setShowGif] = useState(false); // Estado para mostrar el GIF\n\n  useEffect(() => {\n    // Esperar 4 segundos antes de hacer el blur y cambiar la opacidad\n    const timeout = setTimeout(() => {\n      setClosing(true); // Cambia el estado para aplicar la animación de salida después de 4 segundos\n    }, 4000);\n\n    // Mostrar el GIF al final de la animación\n    const gifTimeout = setTimeout(() => {\n      setShowGif(true); // Cambia el estado para mostrar el GIF\n    }, 5000); // Un segundo después del cierre (opcional)\n\n    // Establece el comportamiento al cerrar o recargar la página\n    const handleBeforeUnload = () => {\n      setClosing(true); // Cambia el estado si la página se va a cerrar\n    };\n\n    // Detecta cuando la pestaña se va a cerrar o recargar\n    window.addEventListener('beforeunload', handleBeforeUnload);\n\n    // Limpiar los timeouts cuando el componente se desmonta\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n      clearTimeout(timeout);\n      clearTimeout(gifTimeout);\n    };\n  }, []);\n\n  return (\n    <>\n      {showGif ? (\n        // Mostrar el GIF al final\n        <div className=\"GifContainer\">\n          <img src={glitch} alt=\"glitch\" />\n        </div>\n      ) : (\n        // Preloader con GrainOverlay siempre visible\n        <div className={`Preloader__Content ${closing ? 'closing' : ''}`}>\n          <GrainOverlay />\n          <div className=\"Preloader__Container\">\n            <div className=\"Preloader__Text\">\n              STANDBY..\n              <span className=\"blinking-dot\">.</span>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Preloader;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,YAAY,KAAM,gBAAgB,CACzC,MAAO,0BAA0B,CACjC,MAAO,CAAAC,MAAM,KAAM,2BAA2B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAE/C,KAAM,CAAAC,SAAS,CAAGA,CAAA,GAAM,CACtB,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGZ,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAACa,OAAO,CAAEC,UAAU,CAAC,CAAGd,QAAQ,CAAC,KAAK,CAAC,CAAE;AAE/CC,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAc,OAAO,CAAGC,UAAU,CAAC,IAAM,CAC/BJ,UAAU,CAAC,IAAI,CAAC,CAAE;AACpB,CAAC,CAAE,IAAI,CAAC,CAER;AACA,KAAM,CAAAK,UAAU,CAAGD,UAAU,CAAC,IAAM,CAClCF,UAAU,CAAC,IAAI,CAAC,CAAE;AACpB,CAAC,CAAE,IAAI,CAAC,CAAE;AAEV;AACA,KAAM,CAAAI,kBAAkB,CAAGA,CAAA,GAAM,CAC/BN,UAAU,CAAC,IAAI,CAAC,CAAE;AACpB,CAAC,CAED;AACAO,MAAM,CAACC,gBAAgB,CAAC,cAAc,CAAEF,kBAAkB,CAAC,CAE3D;AACA,MAAO,IAAM,CACXC,MAAM,CAACE,mBAAmB,CAAC,cAAc,CAAEH,kBAAkB,CAAC,CAC9DI,YAAY,CAACP,OAAO,CAAC,CACrBO,YAAY,CAACL,UAAU,CAAC,CAC1B,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEZ,IAAA,CAAAI,SAAA,EAAAc,QAAA,CACGV,OAAO,eACN;AACAR,IAAA,QAAKmB,SAAS,CAAC,cAAc,CAAAD,QAAA,cAC3BlB,IAAA,QAAKoB,GAAG,CAAEtB,MAAO,CAACuB,GAAG,CAAC,QAAQ,CAAE,CAAC,CAC9B,CAAC,eAEN;AACAnB,KAAA,QAAKiB,SAAS,uBAAAG,MAAA,CAAwBhB,OAAO,CAAG,SAAS,CAAG,EAAE,CAAG,CAAAY,QAAA,eAC/DlB,IAAA,CAACH,YAAY,GAAE,CAAC,cAChBG,IAAA,QAAKmB,SAAS,CAAC,sBAAsB,CAAAD,QAAA,cACnChB,KAAA,QAAKiB,SAAS,CAAC,iBAAiB,CAAAD,QAAA,EAAC,WAE/B,cAAAlB,IAAA,SAAMmB,SAAS,CAAC,cAAc,CAAAD,QAAA,CAAC,GAAC,CAAM,CAAC,EACpC,CAAC,CACH,CAAC,EACH,CACN,CACD,CAAC,CAEP,CAAC,CAED,cAAe,CAAAb,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}