{"ast":null,"code":"var _jsxFileName = \"/home/johnlemon/portfolio/src/components/HomeCarousel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport section1Image from '../assets/imgs/carrousel_img_1.jpg';\nimport section2Image from '../assets/imgs/carrousel_img_2.jpg';\nimport section3Image from '../assets/imgs/carrousel_img_3.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sectionImages = [section1Image, section2Image, section3Image];\nconst NUM_STRIPS = 20;\nconst HomeCarousel = ({\n  section\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [image, setImage] = useState(null);\n  const animationRef = useRef(null);\n  const strips = useRef(Array(NUM_STRIPS).fill(0)); // Inicializar en 0 para ocultar\n  const isAnimating = useRef(false);\n  const hasAnimated = useRef(false); // Nuevo flag para controlar primera animación\n\n  // Cargar imagen actual\n  useEffect(() => {\n    const img = new Image();\n    img.src = sectionImages[section];\n    img.onload = () => {\n      setImage(img);\n      if (!hasAnimated.current) {\n        var _canvasRef$current;\n        // Dibujar imagen oculta inicialmente\n        const ctx = (_canvasRef$current = canvasRef.current) === null || _canvasRef$current === void 0 ? void 0 : _canvasRef$current.getContext('2d');\n        if (ctx) drawImage(ctx);\n      }\n    };\n    img.onerror = e => console.error('Error loading image:', e);\n  }, [section]);\n\n  // Configurar canvas y animación (actualizado)\n  useEffect(() => {\n    if (!image) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d', {\n      willReadFrequently: true,\n      alpha: true // Permitir transparencia\n    });\n\n    // Configurar suavizado de imagen\n    ctx.imageSmoothingEnabled = true;\n    ctx.imageSmoothingQuality = 'high';\n    const container = canvas.parentElement;\n    const setCanvasSize = () => {\n      canvas.width = container.clientWidth * 2; // Mejor calidad con tamaño doble\n      canvas.height = container.clientHeight * 2;\n      canvas.style.width = `${container.clientWidth}px`;\n      canvas.style.height = `${container.clientHeight}px`;\n    };\n    setCanvasSize();\n    const resizeObserver = new ResizeObserver(setCanvasSize);\n    resizeObserver.observe(container);\n    return () => {\n      resizeObserver.disconnect();\n      cancelAnimationFrame(animationRef.current);\n    };\n  }, [image]);\n  const drawImage = ctx => {\n    if (!image || !ctx) return;\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    const stripWidth = ctx.canvas.width / NUM_STRIPS;\n    strips.current.forEach((opacity, index) => {\n      ctx.globalAlpha = opacity;\n      ctx.drawImage(image, index * image.width / NUM_STRIPS, 0, image.width / NUM_STRIPS, image.height, index * stripWidth, 0, stripWidth, ctx.canvas.height);\n    });\n  };\n  const startAnimation = () => {\n    if (isAnimating.current) return;\n    isAnimating.current = true;\n    hasAnimated.current = true;\n    const animate = startTime => {\n      var _canvasRef$current2;\n      const ctx = (_canvasRef$current2 = canvasRef.current) === null || _canvasRef$current2 === void 0 ? void 0 : _canvasRef$current2.getContext('2d');\n      if (!ctx) return;\n\n      // Ajustar parámetros de animación\n      const animationDuration = 300; // Reducir duración\n      const stripDelay = 30; // Reducir delay entre strips\n\n      strips.current = strips.current.map((_, index) => {\n        const elapsed = performance.now() - startTime - index * stripDelay;\n        return Math.min(elapsed / animationDuration, 1); // Cambiado a fade-in\n      });\n      drawImage(ctx);\n      if (performance.now() - startTime < NUM_STRIPS * stripDelay + animationDuration) {\n        animationRef.current = requestAnimationFrame(() => animate(startTime));\n      } else {\n        isAnimating.current = false;\n        // Mantener visible después de la animación\n        strips.current = Array(NUM_STRIPS).fill(1);\n        drawImage(ctx);\n      }\n    };\n    animationRef.current = requestAnimationFrame(() => animate(performance.now()));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home__carrousel\",\n    onClick: startAnimation,\n    style: {\n      background: 'transparent',\n      position: 'relative',\n      cursor: 'pointer'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        background: 'transparent',\n        imageRendering: 'auto' // Mejor calidad\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n_s(HomeCarousel, \"mTr+TSa51aGV9MerrkwZhmWD9JY=\");\n_c = HomeCarousel;\nexport default HomeCarousel;\nvar _c;\n$RefreshReg$(_c, \"HomeCarousel\");","map":{"version":3,"names":["React","useEffect","useRef","useState","section1Image","section2Image","section3Image","jsxDEV","_jsxDEV","sectionImages","NUM_STRIPS","HomeCarousel","section","_s","canvasRef","image","setImage","animationRef","strips","Array","fill","isAnimating","hasAnimated","img","Image","src","onload","current","_canvasRef$current","ctx","getContext","drawImage","onerror","e","console","error","canvas","willReadFrequently","alpha","imageSmoothingEnabled","imageSmoothingQuality","container","parentElement","setCanvasSize","width","clientWidth","height","clientHeight","style","resizeObserver","ResizeObserver","observe","disconnect","cancelAnimationFrame","clearRect","stripWidth","forEach","opacity","index","globalAlpha","startAnimation","animate","startTime","_canvasRef$current2","animationDuration","stripDelay","map","_","elapsed","performance","now","Math","min","requestAnimationFrame","className","onClick","background","position","cursor","children","ref","imageRendering","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/johnlemon/portfolio/src/components/HomeCarousel.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport section1Image from '../assets/imgs/carrousel_img_1.jpg';\nimport section2Image from '../assets/imgs/carrousel_img_2.jpg';\nimport section3Image from '../assets/imgs/carrousel_img_3.jpg';\n\nconst sectionImages = [section1Image, section2Image, section3Image];\nconst NUM_STRIPS = 20;\n\nconst HomeCarousel = ({ section }) => {\n  const canvasRef = useRef(null);\n  const [image, setImage] = useState(null);\n  const animationRef = useRef(null);\n  const strips = useRef(Array(NUM_STRIPS).fill(0)); // Inicializar en 0 para ocultar\n  const isAnimating = useRef(false);\n  const hasAnimated = useRef(false); // Nuevo flag para controlar primera animación\n\n  // Cargar imagen actual\n  useEffect(() => {\n    const img = new Image();\n    img.src = sectionImages[section];\n    img.onload = () => {\n      setImage(img);\n      if (!hasAnimated.current) {\n        // Dibujar imagen oculta inicialmente\n        const ctx = canvasRef.current?.getContext('2d');\n        if (ctx) drawImage(ctx);\n      }\n    };\n    img.onerror = (e) => console.error('Error loading image:', e);\n  }, [section]);\n\n  // Configurar canvas y animación (actualizado)\n  useEffect(() => {\n    if (!image) return;\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d', { \n      willReadFrequently: true,\n      alpha: true // Permitir transparencia\n    });\n    \n    // Configurar suavizado de imagen\n    ctx.imageSmoothingEnabled = true;\n    ctx.imageSmoothingQuality = 'high';\n\n    const container = canvas.parentElement;\n\n    const setCanvasSize = () => {\n      canvas.width = container.clientWidth * 2; // Mejor calidad con tamaño doble\n      canvas.height = container.clientHeight * 2;\n      canvas.style.width = `${container.clientWidth}px`;\n      canvas.style.height = `${container.clientHeight}px`;\n    };\n\n    setCanvasSize();\n    \n    const resizeObserver = new ResizeObserver(setCanvasSize);\n    resizeObserver.observe(container);\n\n    return () => {\n      resizeObserver.disconnect();\n      cancelAnimationFrame(animationRef.current);\n    };\n  }, [image]);\n\n  const drawImage = (ctx) => {\n    if (!image || !ctx) return;\n\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    const stripWidth = ctx.canvas.width / NUM_STRIPS;\n\n    strips.current.forEach((opacity, index) => {\n      ctx.globalAlpha = opacity;\n      ctx.drawImage(\n        image,\n        (index * image.width) / NUM_STRIPS,\n        0,\n        image.width / NUM_STRIPS,\n        image.height,\n        index * stripWidth,\n        0,\n        stripWidth,\n        ctx.canvas.height\n      );\n    });\n  };\n\n  const startAnimation = () => {\n    if (isAnimating.current) return;\n    isAnimating.current = true;\n    hasAnimated.current = true;\n\n    const animate = (startTime) => {\n      const ctx = canvasRef.current?.getContext('2d');\n      if (!ctx) return;\n\n      // Ajustar parámetros de animación\n      const animationDuration = 300; // Reducir duración\n      const stripDelay = 30; // Reducir delay entre strips\n\n      strips.current = strips.current.map((_, index) => {\n        const elapsed = performance.now() - startTime - index * stripDelay;\n        return Math.min(elapsed / animationDuration, 1); // Cambiado a fade-in\n      });\n\n      drawImage(ctx);\n\n      if (performance.now() - startTime < (NUM_STRIPS * stripDelay) + animationDuration) {\n        animationRef.current = requestAnimationFrame(() => animate(startTime));\n      } else {\n        isAnimating.current = false;\n        // Mantener visible después de la animación\n        strips.current = Array(NUM_STRIPS).fill(1);\n        drawImage(ctx);\n      }\n    };\n\n    animationRef.current = requestAnimationFrame(() => animate(performance.now()));\n  };\n\n  return (\n    <div \n      className=\"home__carrousel\" \n      onClick={startAnimation}\n      style={{ \n        background: 'transparent',\n        position: 'relative',\n        cursor: 'pointer'\n      }}\n    >\n      <canvas \n        ref={canvasRef}\n        style={{ \n          background: 'transparent',\n          imageRendering: 'auto' // Mejor calidad\n        }}\n      />\n    </div>\n  );\n};\n\nexport default HomeCarousel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}