{"ast":null,"code":"var _jsxFileName = \"/home/johnlemon/portfolio/src/components/HomeCarousel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport section1Image from '../assets/imgs/carrousel_img_1.jpg';\nimport section2Image from '../assets/imgs/carrousel_img_2.jpg';\nimport section3Image from '../assets/imgs/carrousel_img_3.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sectionImages = [section1Image, section2Image, section3Image];\nconst NUM_STRIPS = 20;\nconst ANIMATION_DURATION = 500;\nconst STRIP_DELAY = 30;\nconst EFFECT_RADIUS = 3;\nconst HomeCarousel = ({\n  section\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [image, setImage] = useState(null);\n  const [hoveredStrip, setHoveredStrip] = useState(null);\n  const animationRef = useRef(null);\n  const stripsProgress = useRef(Array(NUM_STRIPS).fill(0));\n  const isAnimating = useRef(false);\n  const currentEffect = useRef({\n    index: -1,\n    intensity: 0\n  });\n  const stripCache = useRef(new Map());\n  const needsUpdate = useRef(false);\n\n  // Cargar imagen actual\n  useEffect(() => {\n    const img = new Image();\n    img.src = sectionImages[section];\n    img.onload = () => {\n      setImage(img);\n      initializeCache(img);\n      drawImage();\n    };\n    img.onerror = e => console.error('Error loading image:', e);\n  }, [section]);\n\n  // Inicializar caché de strips\n  const initializeCache = img => {\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    const stripWidth = img.width / NUM_STRIPS;\n    canvas.width = stripWidth;\n    canvas.height = img.height;\n    for (let i = 0; i < NUM_STRIPS; i++) {\n      ctx.clearRect(0, 0, stripWidth, img.height);\n      ctx.drawImage(img, i * stripWidth, 0, stripWidth, img.height, 0, 0, stripWidth, img.height);\n      stripCache.current.set(i, canvas.toDataURL());\n    }\n  };\n\n  // Dibujar imagen base\n  const drawBaseImage = (ctx, width, height) => {\n    ctx.clearRect(0, 0, width, height);\n    ctx.drawImage(image, 0, 0, width, height);\n  };\n\n  // Aplicar efectos a un strip\n  const applyEffects = (ctx, index, intensity, stripWidth, height) => {\n    if (intensity <= 0) return;\n    const x = index * stripWidth;\n    const centerX = x + stripWidth / 2;\n    const centerY = height / 2;\n\n    // Configurar transformaciones\n    ctx.save();\n    ctx.translate(centerX, centerY);\n    ctx.rotate(-intensity * 0.03);\n    ctx.scale(1 + intensity * 0.1, 1 + intensity * 0.05);\n    ctx.translate(-centerX, -centerY);\n\n    // Crear elemento temporal para aplicar blur\n    const tempCanvas = document.createElement('canvas');\n    const tempCtx = tempCanvas.getContext('2d');\n    tempCanvas.width = stripWidth;\n    tempCanvas.height = height;\n\n    // Dibujar strip original en temp canvas\n    const img = new Image();\n    img.src = stripCache.current.get(index);\n    img.onload = () => {\n      tempCtx.drawImage(img, 0, 0);\n\n      // Aplicar blur\n      tempCtx.filter = `blur(${intensity * 5}px)`;\n      tempCtx.drawImage(tempCanvas, 0, 0);\n\n      // Dibujar en canvas principal\n      ctx.drawImage(tempCanvas, x, 0);\n    };\n    ctx.restore();\n  };\n\n  // Dibujar completo\n  const drawImage = () => {\n    const canvas = canvasRef.current;\n    if (!canvas || !image) return;\n    const ctx = canvas.getContext('2d');\n    const width = canvas.width;\n    const height = canvas.height;\n    const stripWidth = width / NUM_STRIPS;\n\n    // Dibujar base solo si es necesario\n    if (needsUpdate.current) {\n      drawBaseImage(ctx, width, height);\n      needsUpdate.current = false;\n    }\n\n    // Aplicar efectos solo al strip actual\n    if (currentEffect.current.index >= 0) {\n      applyEffects(ctx, currentEffect.current.index, currentEffect.current.intensity, stripWidth, height);\n    }\n  };\n\n  // Actualizar efectos suavemente\n  useEffect(() => {\n    let animationFrameId;\n    const updateEffects = () => {\n      if (!hoveredStrip && currentEffect.current.intensity <= 0) return;\n\n      // Interpolación suave\n      const targetIntensity = hoveredStrip !== null ? 1 : 0;\n      currentEffect.current.intensity += (targetIntensity - currentEffect.current.intensity) * 0.2;\n      if (Math.abs(currentEffect.current.intensity - targetIntensity) > 0.01) {\n        animationFrameId = requestAnimationFrame(updateEffects);\n      }\n\n      // Actualizar solo si hay cambios significativos\n      if (hoveredStrip !== null && hoveredStrip !== currentEffect.current.index) {\n        currentEffect.current.index = hoveredStrip;\n        needsUpdate.current = true;\n      }\n      drawImage();\n    };\n    animationFrameId = requestAnimationFrame(updateEffects);\n    return () => cancelAnimationFrame(animationFrameId);\n  }, [hoveredStrip]);\n\n  // Manejar resize y animación\n  useEffect(() => {\n    if (!image) return;\n    const canvas = canvasRef.current;\n    const container = canvas.parentElement;\n    const setCanvasSize = () => {\n      canvas.width = container.clientWidth * 2;\n      canvas.height = container.clientHeight * 2;\n      canvas.style.width = `${container.clientWidth}px`;\n      canvas.style.height = `${container.clientHeight}px`;\n      needsUpdate.current = true;\n    };\n    setCanvasSize();\n    const resizeObserver = new ResizeObserver(setCanvasSize);\n    resizeObserver.observe(container);\n    return () => resizeObserver.disconnect();\n  }, [image]);\n\n  // Manejadores de eventos\n  const handleMouseMove = e => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const rect = canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const stripIndex = Math.floor(x / rect.width * NUM_STRIPS);\n    setHoveredStrip(Math.min(Math.max(stripIndex, 0), NUM_STRIPS - 1));\n  };\n  const startAnimation = () => {\n    if (isAnimating.current) return;\n    isAnimating.current = true;\n    const animate = startTime => {\n      const progress = Math.min((performance.now() - startTime) / ANIMATION_DURATION, 1);\n      stripsProgress.current = stripsProgress.current.map((_, i) => {\n        const delayProgress = Math.max(progress - i * STRIP_DELAY / ANIMATION_DURATION, 0);\n        return 1 - Math.pow(1 - delayProgress, 3);\n      });\n      needsUpdate.current = true;\n      drawImage();\n      if (progress < 1) {\n        requestAnimationFrame(animate);\n      } else {\n        isAnimating.current = false;\n      }\n    };\n    requestAnimationFrame(animate);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home__carrousel\",\n    onClick: startAnimation,\n    onMouseMove: handleMouseMove,\n    onMouseLeave: () => setHoveredStrip(null),\n    style: {\n      position: 'relative',\n      cursor: 'pointer',\n      background: 'transparent',\n      overflow: 'hidden'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        background: 'transparent',\n        imageRendering: 'crisp-edges'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n};\n_s(HomeCarousel, \"b/YPs10HTwGk8dc5QkebrQqWL4Q=\");\n_c = HomeCarousel;\nexport default HomeCarousel;\nvar _c;\n$RefreshReg$(_c, \"HomeCarousel\");","map":{"version":3,"names":["React","useEffect","useRef","useState","section1Image","section2Image","section3Image","jsxDEV","_jsxDEV","sectionImages","NUM_STRIPS","ANIMATION_DURATION","STRIP_DELAY","EFFECT_RADIUS","HomeCarousel","section","_s","canvasRef","image","setImage","hoveredStrip","setHoveredStrip","animationRef","stripsProgress","Array","fill","isAnimating","currentEffect","index","intensity","stripCache","Map","needsUpdate","img","Image","src","onload","initializeCache","drawImage","onerror","e","console","error","canvas","document","createElement","ctx","getContext","stripWidth","width","height","i","clearRect","current","set","toDataURL","drawBaseImage","applyEffects","x","centerX","centerY","save","translate","rotate","scale","tempCanvas","tempCtx","get","filter","restore","animationFrameId","updateEffects","targetIntensity","Math","abs","requestAnimationFrame","cancelAnimationFrame","container","parentElement","setCanvasSize","clientWidth","clientHeight","style","resizeObserver","ResizeObserver","observe","disconnect","handleMouseMove","rect","getBoundingClientRect","clientX","left","stripIndex","floor","min","max","startAnimation","animate","startTime","progress","performance","now","map","_","delayProgress","pow","className","onClick","onMouseMove","onMouseLeave","position","cursor","background","overflow","children","ref","imageRendering","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/johnlemon/portfolio/src/components/HomeCarousel.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport section1Image from '../assets/imgs/carrousel_img_1.jpg';\nimport section2Image from '../assets/imgs/carrousel_img_2.jpg';\nimport section3Image from '../assets/imgs/carrousel_img_3.jpg';\n\nconst sectionImages = [section1Image, section2Image, section3Image];\nconst NUM_STRIPS = 20;\nconst ANIMATION_DURATION = 500;\nconst STRIP_DELAY = 30;\nconst EFFECT_RADIUS = 3;\n\nconst HomeCarousel = ({ section }) => {\n  const canvasRef = useRef(null);\n  const [image, setImage] = useState(null);\n  const [hoveredStrip, setHoveredStrip] = useState(null);\n  const animationRef = useRef(null);\n  const stripsProgress = useRef(Array(NUM_STRIPS).fill(0));\n  const isAnimating = useRef(false);\n  const currentEffect = useRef({ index: -1, intensity: 0 });\n  const stripCache = useRef(new Map());\n  const needsUpdate = useRef(false);\n\n  // Cargar imagen actual\n  useEffect(() => {\n    const img = new Image();\n    img.src = sectionImages[section];\n    img.onload = () => {\n      setImage(img);\n      initializeCache(img);\n      drawImage();\n    };\n    img.onerror = (e) => console.error('Error loading image:', e);\n  }, [section]);\n\n  // Inicializar caché de strips\n  const initializeCache = (img) => {\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    const stripWidth = img.width / NUM_STRIPS;\n    \n    canvas.width = stripWidth;\n    canvas.height = img.height;\n    \n    for(let i = 0; i < NUM_STRIPS; i++) {\n      ctx.clearRect(0, 0, stripWidth, img.height);\n      ctx.drawImage(\n        img,\n        i * stripWidth, 0, stripWidth, img.height,\n        0, 0, stripWidth, img.height\n      );\n      stripCache.current.set(i, canvas.toDataURL());\n    }\n  };\n\n  // Dibujar imagen base\n  const drawBaseImage = (ctx, width, height) => {\n    ctx.clearRect(0, 0, width, height);\n    ctx.drawImage(image, 0, 0, width, height);\n  };\n\n  // Aplicar efectos a un strip\n  const applyEffects = (ctx, index, intensity, stripWidth, height) => {\n    if(intensity <= 0) return;\n\n    const x = index * stripWidth;\n    const centerX = x + stripWidth / 2;\n    const centerY = height / 2;\n    \n    // Configurar transformaciones\n    ctx.save();\n    ctx.translate(centerX, centerY);\n    ctx.rotate(-intensity * 0.03);\n    ctx.scale(1 + intensity * 0.1, 1 + intensity * 0.05);\n    ctx.translate(-centerX, -centerY);\n\n    // Crear elemento temporal para aplicar blur\n    const tempCanvas = document.createElement('canvas');\n    const tempCtx = tempCanvas.getContext('2d');\n    tempCanvas.width = stripWidth;\n    tempCanvas.height = height;\n    \n    // Dibujar strip original en temp canvas\n    const img = new Image();\n    img.src = stripCache.current.get(index);\n    img.onload = () => {\n      tempCtx.drawImage(img, 0, 0);\n      \n      // Aplicar blur\n      tempCtx.filter = `blur(${intensity * 5}px)`;\n      tempCtx.drawImage(tempCanvas, 0, 0);\n      \n      // Dibujar en canvas principal\n      ctx.drawImage(tempCanvas, x, 0);\n    };\n\n    ctx.restore();\n  };\n\n  // Dibujar completo\n  const drawImage = () => {\n    const canvas = canvasRef.current;\n    if(!canvas || !image) return;\n    \n    const ctx = canvas.getContext('2d');\n    const width = canvas.width;\n    const height = canvas.height;\n    const stripWidth = width / NUM_STRIPS;\n\n    // Dibujar base solo si es necesario\n    if(needsUpdate.current) {\n      drawBaseImage(ctx, width, height);\n      needsUpdate.current = false;\n    }\n\n    // Aplicar efectos solo al strip actual\n    if(currentEffect.current.index >= 0) {\n      applyEffects(\n        ctx,\n        currentEffect.current.index,\n        currentEffect.current.intensity,\n        stripWidth,\n        height\n      );\n    }\n  };\n\n  // Actualizar efectos suavemente\n  useEffect(() => {\n    let animationFrameId;\n    \n    const updateEffects = () => {\n      if(!hoveredStrip && currentEffect.current.intensity <= 0) return;\n\n      // Interpolación suave\n      const targetIntensity = hoveredStrip !== null ? 1 : 0;\n      currentEffect.current.intensity += (targetIntensity - currentEffect.current.intensity) * 0.2;\n      \n      if(Math.abs(currentEffect.current.intensity - targetIntensity) > 0.01) {\n        animationFrameId = requestAnimationFrame(updateEffects);\n      }\n\n      // Actualizar solo si hay cambios significativos\n      if(hoveredStrip !== null && hoveredStrip !== currentEffect.current.index) {\n        currentEffect.current.index = hoveredStrip;\n        needsUpdate.current = true;\n      }\n\n      drawImage();\n    };\n\n    animationFrameId = requestAnimationFrame(updateEffects);\n    return () => cancelAnimationFrame(animationFrameId);\n  }, [hoveredStrip]);\n\n  // Manejar resize y animación\n  useEffect(() => {\n    if(!image) return;\n\n    const canvas = canvasRef.current;\n    const container = canvas.parentElement;\n    \n    const setCanvasSize = () => {\n      canvas.width = container.clientWidth * 2;\n      canvas.height = container.clientHeight * 2;\n      canvas.style.width = `${container.clientWidth}px`;\n      canvas.style.height = `${container.clientHeight}px`;\n      needsUpdate.current = true;\n    };\n\n    setCanvasSize();\n    const resizeObserver = new ResizeObserver(setCanvasSize);\n    resizeObserver.observe(container);\n\n    return () => resizeObserver.disconnect();\n  }, [image]);\n\n  // Manejadores de eventos\n  const handleMouseMove = (e) => {\n    const canvas = canvasRef.current;\n    if(!canvas) return;\n    \n    const rect = canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const stripIndex = Math.floor((x / rect.width) * NUM_STRIPS);\n    \n    setHoveredStrip(Math.min(Math.max(stripIndex, 0), NUM_STRIPS - 1));\n  };\n\n  const startAnimation = () => {\n    if(isAnimating.current) return;\n    isAnimating.current = true;\n\n    const animate = (startTime) => {\n      const progress = Math.min((performance.now() - startTime) / ANIMATION_DURATION, 1);\n      stripsProgress.current = stripsProgress.current.map((_, i) => {\n        const delayProgress = Math.max(progress - (i * STRIP_DELAY) / ANIMATION_DURATION, 0);\n        return 1 - Math.pow(1 - delayProgress, 3);\n      });\n\n      needsUpdate.current = true;\n      drawImage();\n\n      if(progress < 1) {\n        requestAnimationFrame(animate);\n      } else {\n        isAnimating.current = false;\n      }\n    };\n\n    requestAnimationFrame(animate);\n  };\n\n  return (\n    <div \n      className=\"home__carrousel\" \n      onClick={startAnimation}\n      onMouseMove={handleMouseMove}\n      onMouseLeave={() => setHoveredStrip(null)}\n      style={{ \n        position: 'relative',\n        cursor: 'pointer',\n        background: 'transparent',\n        overflow: 'hidden'\n      }}\n    >\n      <canvas \n        ref={canvasRef}\n        style={{ \n          background: 'transparent',\n          imageRendering: 'crisp-edges'\n        }}\n      />\n    </div>\n  );\n};\n\nexport default HomeCarousel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}