{"ast":null,"code":"var _jsxFileName = \"/home/johnlemon/portfolio/src/components/HomeCarousel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport section1Image from '../assets/imgs/carrousel_img_1.jpg';\nimport section2Image from '../assets/imgs/carrousel_img_2.jpg';\nimport section3Image from '../assets/imgs/carrousel_img_3.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sectionImages = [section1Image, section2Image, section3Image];\nconst NUM_STRIPS = 20;\nconst HomeCarousel = ({\n  section\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [image, setImage] = useState(null);\n  const animationRef = useRef(null);\n  const strips = useRef(Array(NUM_STRIPS).fill(1));\n  const isAnimating = useRef(false);\n\n  // Cargar imagen actual\n  useEffect(() => {\n    const img = new Image();\n    img.src = sectionImages[section];\n    img.onload = () => setImage(img);\n  }, [section]);\n\n  // Configurar canvas\n  useEffect(() => {\n    if (!image) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const container = canvas.parentElement;\n    const setCanvasSize = () => {\n      canvas.width = container.clientWidth;\n      canvas.height = container.clientHeight;\n    };\n    setCanvasSize();\n    drawImage();\n    const resizeObserver = new ResizeObserver(setCanvasSize);\n    resizeObserver.observe(container);\n    return () => {\n      resizeObserver.disconnect();\n      cancelAnimationFrame(animationRef.current);\n    };\n  }, [image]);\n  const drawImage = () => {\n    if (!image) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Dibujar imagen base\n    ctx.globalAlpha = 1;\n    ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n\n    // Dibujar strips con opacidad\n    const stripWidth = canvas.width / NUM_STRIPS;\n    strips.current.forEach((opacity, index) => {\n      if (opacity === 1) return;\n      ctx.globalAlpha = 1 - opacity;\n      ctx.fillStyle = 'black';\n      ctx.fillRect(index * stripWidth, 0, stripWidth, canvas.height);\n    });\n  };\n  const startAnimation = () => {\n    if (isAnimating.current) return;\n    isAnimating.current = true;\n    const animate = startTime => {\n      const animationDuration = 1000; // 1 segundo por strip\n      const stripDelay = 50; // 50ms entre strips\n\n      strips.current = strips.current.map((_, index) => {\n        const elapsed = Date.now() - startTime - index * stripDelay;\n        const progress = Math.min(elapsed / animationDuration, 1);\n        return Math.max(1 - progress, 0);\n      });\n      drawImage();\n      if (Date.now() - startTime < NUM_STRIPS * stripDelay + animationDuration) {\n        animationRef.current = requestAnimationFrame(() => animate(startTime));\n      } else {\n        isAnimating.current = false;\n        // Reset después de 500ms\n        setTimeout(() => {\n          strips.current = Array(NUM_STRIPS).fill(1);\n          drawImage();\n        }, 500);\n      }\n    };\n    animationRef.current = requestAnimationFrame(() => animate(Date.now()));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home__carrousel\",\n    onClick: startAnimation,\n    style: {\n      cursor: 'pointer'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n_s(HomeCarousel, \"iNFPqducsb3BiTQIf5nXT/63kFI=\");\n_c = HomeCarousel;\nexport default HomeCarousel;\nvar _c;\n$RefreshReg$(_c, \"HomeCarousel\");","map":{"version":3,"names":["React","useEffect","useRef","useState","section1Image","section2Image","section3Image","jsxDEV","_jsxDEV","sectionImages","NUM_STRIPS","HomeCarousel","section","_s","canvasRef","image","setImage","animationRef","strips","Array","fill","isAnimating","img","Image","src","onload","canvas","current","ctx","getContext","container","parentElement","setCanvasSize","width","clientWidth","height","clientHeight","drawImage","resizeObserver","ResizeObserver","observe","disconnect","cancelAnimationFrame","clearRect","globalAlpha","stripWidth","forEach","opacity","index","fillStyle","fillRect","startAnimation","animate","startTime","animationDuration","stripDelay","map","_","elapsed","Date","now","progress","Math","min","max","requestAnimationFrame","setTimeout","className","onClick","style","cursor","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/johnlemon/portfolio/src/components/HomeCarousel.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport section1Image from '../assets/imgs/carrousel_img_1.jpg';\nimport section2Image from '../assets/imgs/carrousel_img_2.jpg';\nimport section3Image from '../assets/imgs/carrousel_img_3.jpg';\n\nconst sectionImages = [section1Image, section2Image, section3Image];\nconst NUM_STRIPS = 20;\n\nconst HomeCarousel = ({ section }) => {\n  const canvasRef = useRef(null);\n  const [image, setImage] = useState(null);\n  const animationRef = useRef(null);\n  const strips = useRef(Array(NUM_STRIPS).fill(1));\n  const isAnimating = useRef(false);\n\n  // Cargar imagen actual\n  useEffect(() => {\n    const img = new Image();\n    img.src = sectionImages[section];\n    img.onload = () => setImage(img);\n  }, [section]);\n\n  // Configurar canvas\n  useEffect(() => {\n    if (!image) return;\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const container = canvas.parentElement;\n    \n    const setCanvasSize = () => {\n      canvas.width = container.clientWidth;\n      canvas.height = container.clientHeight;\n    };\n    \n    setCanvasSize();\n    drawImage();\n\n    const resizeObserver = new ResizeObserver(setCanvasSize);\n    resizeObserver.observe(container);\n\n    return () => {\n      resizeObserver.disconnect();\n      cancelAnimationFrame(animationRef.current);\n    };\n  }, [image]);\n\n  const drawImage = () => {\n    if (!image) return;\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    \n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    \n    // Dibujar imagen base\n    ctx.globalAlpha = 1;\n    ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n    \n    // Dibujar strips con opacidad\n    const stripWidth = canvas.width / NUM_STRIPS;\n    \n    strips.current.forEach((opacity, index) => {\n      if (opacity === 1) return;\n      \n      ctx.globalAlpha = 1 - opacity;\n      ctx.fillStyle = 'black';\n      ctx.fillRect(\n        index * stripWidth,\n        0,\n        stripWidth,\n        canvas.height\n      );\n    });\n  };\n\n  const startAnimation = () => {\n    if (isAnimating.current) return;\n    isAnimating.current = true;\n\n    const animate = (startTime) => {\n      const animationDuration = 1000; // 1 segundo por strip\n      const stripDelay = 50; // 50ms entre strips\n\n      strips.current = strips.current.map((_, index) => {\n        const elapsed = Date.now() - startTime - index * stripDelay;\n        const progress = Math.min(elapsed / animationDuration, 1);\n        return Math.max(1 - progress, 0);\n      });\n\n      drawImage();\n\n      if (Date.now() - startTime < (NUM_STRIPS * stripDelay) + animationDuration) {\n        animationRef.current = requestAnimationFrame(() => animate(startTime));\n      } else {\n        isAnimating.current = false;\n        // Reset después de 500ms\n        setTimeout(() => {\n          strips.current = Array(NUM_STRIPS).fill(1);\n          drawImage();\n        }, 500);\n      }\n    };\n\n    animationRef.current = requestAnimationFrame(() => animate(Date.now()));\n  };\n\n  return (\n    <div \n      className=\"home__carrousel\"\n      onClick={startAnimation}\n      style={{ cursor: 'pointer' }}\n    >\n      <canvas ref={canvasRef} />\n    </div>\n  );\n};\n\nexport default HomeCarousel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}