{"ast":null,"code":"var _jsxFileName = \"/home/johnlemon/portfolio/src/components/HomeCarousel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport section1Image from '../assets/imgs/carrousel_img_1.jpg';\nimport section2Image from '../assets/imgs/carrousel_img_2.jpg';\nimport section3Image from '../assets/imgs/carrousel_img_3.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sectionImages = [section1Image, section2Image, section3Image];\nconst NUM_STRIPS = 20;\nconst ANIMATION_DURATION = 500;\nconst STRIP_DELAY = 30;\nconst START_ROW = 0;\nconst HomeCarousel = ({\n  section\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [image, setImage] = useState(null);\n  const [hoveredStrip, setHoveredStrip] = useState(null);\n  const animationRef = useRef(null);\n  const stripsProgress = useRef(Array(NUM_STRIPS).fill(0));\n  const isAnimating = useRef(false);\n  const mousePos = useRef({\n    x: 0,\n    y: 0\n  });\n\n  // Efectos de carga de imagen y configuración del canvas se mantienen igual...\n\n  const getAffectedStrips = () => {\n    if (hoveredStrip === null) return [];\n    const affectedStrips = [];\n\n    // Centro + 3 strips a cada lado\n    for (let i = -3; i <= 3; i++) {\n      const stripIndex = hoveredStrip + i;\n      if (stripIndex >= 0 && stripIndex < NUM_STRIPS) {\n        const distance = Math.abs(i);\n        affectedStrips.push({\n          index: stripIndex,\n          intensity: Math.max(1 - distance * 0.25, 0)\n        });\n      }\n    }\n    return affectedStrips;\n  };\n  const applySaturationEffect = ctx => {\n    if (!hoveredStrip) return;\n    const affectedStrips = getAffectedStrips();\n    const stripWidth = Math.ceil(ctx.canvas.width / NUM_STRIPS);\n    const totalWidth = stripWidth * NUM_STRIPS;\n    const xOffset = Math.max(0, (ctx.canvas.width - totalWidth) / 2);\n    affectedStrips.forEach(({\n      index,\n      intensity\n    }) => {\n      const xPos = Math.floor(xOffset + index * stripWidth);\n\n      // Crear overlay de saturación\n      ctx.fillStyle = `rgba(255, 255, 255, ${0.5 * (1 - intensity)})`;\n      ctx.fillRect(xPos, 0, stripWidth, ctx.canvas.height);\n    });\n  };\n  const drawImage = ctx => {\n    if (!image || !ctx) return;\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n    // Dibujar fondo transparente\n    ctx.fillStyle = 'transparent';\n    ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n    // Calcular stripWidth como número entero\n    const stripWidth = Math.ceil(ctx.canvas.width / NUM_STRIPS);\n\n    // Ajustar el ancho total para evitar desbordamiento\n    const totalWidth = stripWidth * NUM_STRIPS;\n    const xOffset = Math.max(0, (ctx.canvas.width - totalWidth) / 2);\n    stripsProgress.current.forEach((progress, index) => {\n      ctx.save();\n\n      // Calcular posición X como número entero\n      const xPos = Math.floor(xOffset + index * stripWidth);\n\n      // Ancho de revelación sin espacios\n      const revealWidth = Math.ceil(stripWidth * progress);\n\n      // Crear máscara de recorte ajustada\n      ctx.beginPath();\n      ctx.rect(xPos, 0, revealWidth, ctx.canvas.height);\n      ctx.clip();\n\n      // Dibujar porción de la imagen con alineación perfecta\n      ctx.drawImage(image, Math.floor(index * image.width / NUM_STRIPS), 0, Math.ceil(image.width / NUM_STRIPS), image.height, xPos, 0, stripWidth, ctx.canvas.height);\n      ctx.restore();\n    });\n\n    // Aplicar efecto de saturación\n    applySaturationEffect(ctx);\n  };\n  const handleMouseMove = e => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const rect = canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const stripWidth = canvas.clientWidth / NUM_STRIPS;\n    const stripIndex = Math.floor(x / stripWidth);\n    setHoveredStrip(stripIndex);\n    mousePos.current = {\n      x: e.clientX,\n      y: e.clientY\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home__carrousel\",\n    onClick: startAnimation,\n    onMouseMove: handleMouseMove,\n    onMouseLeave: () => setHoveredStrip(null),\n    style: {\n      position: 'relative',\n      cursor: 'pointer',\n      background: 'transparent',\n      mixBlendMode: 'multiply'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        background: 'transparent',\n        imageRendering: 'auto'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_s(HomeCarousel, \"VtTKE9HQx5n66gB2WelC+lx005E=\");\n_c = HomeCarousel;\nexport default HomeCarousel;\nvar _c;\n$RefreshReg$(_c, \"HomeCarousel\");","map":{"version":3,"names":["React","useEffect","useRef","useState","section1Image","section2Image","section3Image","jsxDEV","_jsxDEV","sectionImages","NUM_STRIPS","ANIMATION_DURATION","STRIP_DELAY","START_ROW","HomeCarousel","section","_s","canvasRef","image","setImage","hoveredStrip","setHoveredStrip","animationRef","stripsProgress","Array","fill","isAnimating","mousePos","x","y","getAffectedStrips","affectedStrips","i","stripIndex","distance","Math","abs","push","index","intensity","max","applySaturationEffect","ctx","stripWidth","ceil","canvas","width","totalWidth","xOffset","forEach","xPos","floor","fillStyle","fillRect","height","drawImage","clearRect","current","progress","save","revealWidth","beginPath","rect","clip","restore","handleMouseMove","e","getBoundingClientRect","clientX","left","clientWidth","clientY","className","onClick","startAnimation","onMouseMove","onMouseLeave","style","position","cursor","background","mixBlendMode","children","ref","imageRendering","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/johnlemon/portfolio/src/components/HomeCarousel.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport section1Image from '../assets/imgs/carrousel_img_1.jpg';\nimport section2Image from '../assets/imgs/carrousel_img_2.jpg';\nimport section3Image from '../assets/imgs/carrousel_img_3.jpg';\n\nconst sectionImages = [section1Image, section2Image, section3Image];\nconst NUM_STRIPS = 20;\nconst ANIMATION_DURATION = 500;\nconst STRIP_DELAY = 30;\nconst START_ROW = 0;\n\nconst HomeCarousel = ({ section }) => {\n  const canvasRef = useRef(null);\n  const [image, setImage] = useState(null);\n  const [hoveredStrip, setHoveredStrip] = useState(null);\n  const animationRef = useRef(null);\n  const stripsProgress = useRef(Array(NUM_STRIPS).fill(0));\n  const isAnimating = useRef(false);\n  const mousePos = useRef({ x: 0, y: 0 });\n\n  // Efectos de carga de imagen y configuración del canvas se mantienen igual...\n\n  const getAffectedStrips = () => {\n    if (hoveredStrip === null) return [];\n    const affectedStrips = [];\n    \n    // Centro + 3 strips a cada lado\n    for (let i = -3; i <= 3; i++) {\n      const stripIndex = hoveredStrip + i;\n      if (stripIndex >= 0 && stripIndex < NUM_STRIPS) {\n        const distance = Math.abs(i);\n        affectedStrips.push({\n          index: stripIndex,\n          intensity: Math.max(1 - (distance * 0.25), 0)\n        });\n      }\n    }\n    return affectedStrips;\n  };\n\n  const applySaturationEffect = (ctx) => {\n    if (!hoveredStrip) return;\n    \n    const affectedStrips = getAffectedStrips();\n    const stripWidth = Math.ceil(ctx.canvas.width / NUM_STRIPS);\n    const totalWidth = stripWidth * NUM_STRIPS;\n    const xOffset = Math.max(0, (ctx.canvas.width - totalWidth) / 2);\n\n    affectedStrips.forEach(({ index, intensity }) => {\n      const xPos = Math.floor(xOffset + index * stripWidth);\n      \n      // Crear overlay de saturación\n      ctx.fillStyle = `rgba(255, 255, 255, ${0.5 * (1 - intensity)})`;\n      ctx.fillRect(xPos, 0, stripWidth, ctx.canvas.height);\n    });\n  };\n\n  const drawImage = (ctx) => {\n    if (!image || !ctx) return;\n\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    \n    // Dibujar fondo transparente\n    ctx.fillStyle = 'transparent';\n    ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    \n    // Calcular stripWidth como número entero\n    const stripWidth = Math.ceil(ctx.canvas.width / NUM_STRIPS);\n    \n    // Ajustar el ancho total para evitar desbordamiento\n    const totalWidth = stripWidth * NUM_STRIPS;\n    const xOffset = Math.max(0, (ctx.canvas.width - totalWidth) / 2);\n\n    stripsProgress.current.forEach((progress, index) => {\n        ctx.save();\n        \n        // Calcular posición X como número entero\n        const xPos = Math.floor(xOffset + index * stripWidth);\n        \n        // Ancho de revelación sin espacios\n        const revealWidth = Math.ceil(stripWidth * progress);\n\n        // Crear máscara de recorte ajustada\n        ctx.beginPath();\n        ctx.rect(\n            xPos,\n            0,\n            revealWidth,\n            ctx.canvas.height\n        );\n        ctx.clip();\n        \n        // Dibujar porción de la imagen con alineación perfecta\n        ctx.drawImage(\n            image,\n            Math.floor((index * image.width) / NUM_STRIPS),\n            0,\n            Math.ceil(image.width / NUM_STRIPS),\n            image.height,\n            xPos,\n            0,\n            stripWidth,\n            ctx.canvas.height\n        );\n        \n        ctx.restore();\n    });\n\n    // Aplicar efecto de saturación\n    applySaturationEffect(ctx);\n  };\n\n  const handleMouseMove = (e) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    \n    const rect = canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const stripWidth = canvas.clientWidth / NUM_STRIPS;\n    const stripIndex = Math.floor(x / stripWidth);\n    \n    setHoveredStrip(stripIndex);\n    mousePos.current = { x: e.clientX, y: e.clientY };\n  };\n\n  return (\n    <div \n      className=\"home__carrousel\" \n      onClick={startAnimation}\n      onMouseMove={handleMouseMove}\n      onMouseLeave={() => setHoveredStrip(null)}\n      style={{ \n        position: 'relative',\n        cursor: 'pointer',\n        background: 'transparent',\n        mixBlendMode: 'multiply'\n      }}\n    >\n      <canvas \n        ref={canvasRef}\n        style={{ \n          background: 'transparent',\n          imageRendering: 'auto'\n        }}\n      />\n    </div>\n  );\n};\n\nexport default HomeCarousel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}