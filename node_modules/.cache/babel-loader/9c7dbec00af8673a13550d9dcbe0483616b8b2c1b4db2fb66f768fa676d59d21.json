{"ast":null,"code":"var _jsxFileName = \"/home/johnlemon/portfolio/src/components/HomeCarousel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport section1Image from '../assets/imgs/carrousel_img_1.jpg';\nimport section2Image from '../assets/imgs/carrousel_img_2.jpg';\nimport section3Image from '../assets/imgs/carrousel_img_3.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sectionImages = {\n  1: section1Image,\n  2: section2Image,\n  3: section3Image\n};\nconst HomeCarousel = ({\n  section\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [currentImage, setCurrentImage] = useState(null);\n  const exitingStripsRef = useRef([]);\n  const animationRef = useRef(null);\n  const sectionNumber = section + 1;\n  console.log('Renderizando HomeCarousel - Sección:', sectionNumber);\n  console.log('Ruta de imagen:', sectionImages[sectionNumber]);\n\n  // Cargar imagen inicial\n  useEffect(() => {\n    console.log('Cargando imagen inicial para sección:', sectionNumber);\n    const img = new Image();\n    img.src = sectionImages[sectionNumber];\n    img.onload = () => {\n      console.log('Imagen cargada:', img.src, 'Dimensiones:', img.width, 'x', img.height);\n      setCurrentImage(img);\n    };\n    img.onerror = () => {\n      console.error('Error al cargar imagen:', sectionImages[sectionNumber]);\n    };\n  }, [sectionNumber]);\n\n  // Manejar cambios de sección\n  useEffect(() => {\n    console.log('Detectado cambio de sección a:', sectionNumber);\n    const img = new Image();\n    img.src = sectionImages[sectionNumber];\n    img.onload = () => {\n      console.log('Nueva imagen cargada:', img.src);\n      const oldImage = currentImage;\n      setCurrentImage(img);\n      if (oldImage && canvasRef.current) {\n        console.log('Creando tiras de salida para transición');\n        createExitStrips(oldImage);\n      }\n    };\n    img.onerror = () => {\n      console.error('Error al cargar nueva imagen:', sectionImages[sectionNumber]);\n    };\n  }, [section]);\n  const createExitStrips = oldImage => {\n    const canvas = canvasRef.current;\n    console.log('Creando tiras de salida - Canvas dimensions:', canvas.width, 'x', canvas.height);\n    const tempCanvas = document.createElement('canvas');\n    const ctx = tempCanvas.getContext('2d');\n    tempCanvas.width = canvas.width;\n    tempCanvas.height = canvas.height;\n    ctx.drawImage(oldImage, 0, 0, canvas.width, canvas.height);\n    const stripWidth = canvas.width / 20;\n    console.log('Ancho de tira calculado:', stripWidth);\n    const strips = [];\n    for (let i = 0; i < 20; i++) {\n      const stripCanvas = document.createElement('canvas');\n      stripCanvas.width = stripWidth;\n      stripCanvas.height = canvas.height;\n      const stripCtx = stripCanvas.getContext('2d');\n      stripCtx.drawImage(tempCanvas, i * stripWidth, 0, stripWidth, canvas.height, 0, 0, stripWidth, canvas.height);\n      strips.push({\n        canvas: stripCanvas,\n        opacity: 1,\n        startTime: null,\n        index: i\n      });\n    }\n    exitingStripsRef.current = strips;\n    console.log('Tiras de salida creadas:', strips.length);\n  };\n  const animate = timestamp => {\n    const canvas = canvasRef.current;\n    if (!canvas) {\n      console.warn('Canvas no disponible en animate');\n      return;\n    }\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Dibujar imagen actual\n    if (currentImage) {\n      console.debug('Dibujando imagen actual');\n      ctx.drawImage(currentImage, 0, 0, canvas.width, canvas.height);\n    }\n\n    // Animar tiras de salida\n    exitingStripsRef.current.forEach((strip, index) => {\n      if (!strip.startTime) {\n        strip.startTime = timestamp + index * 50;\n        console.log(`Iniciando animación para tira ${index} en`, strip.startTime);\n      }\n      if (timestamp >= strip.startTime) {\n        const progress = (timestamp - strip.startTime) / 500;\n        strip.opacity = Math.max(1 - progress, 0);\n      }\n      if (strip.opacity > 0) {\n        ctx.globalAlpha = strip.opacity;\n        ctx.drawImage(strip.canvas, strip.index * strip.canvas.width, 0);\n      }\n    });\n    ctx.globalAlpha = 1;\n    animationRef.current = requestAnimationFrame(animate);\n  };\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) {\n      console.error('Canvas ref no está definido');\n      return;\n    }\n    const container = canvas.parentElement;\n    console.log('Configurando canvas - Contenedor:', container);\n    const updateCanvasSize = () => {\n      canvas.width = container.clientWidth;\n      canvas.height = container.clientHeight;\n      console.log('Tamaño actualizado del canvas:', canvas.width, 'x', canvas.height);\n    };\n    updateCanvasSize();\n    const resizeObserver = new ResizeObserver(entries => {\n      console.log('Detectado cambio de tamaño');\n      entries.forEach(updateCanvasSize);\n    });\n    resizeObserver.observe(container);\n    animationRef.current = requestAnimationFrame(animate);\n    return () => {\n      console.log('Limpiando observador y animación');\n      resizeObserver.unobserve(container);\n      cancelAnimationFrame(animationRef.current);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home__carrousel\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      className: \"home__carrousel__canvas\",\n      style: {\n        imageRendering: 'auto'\n      } // Valor corregido\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n};\n_s(HomeCarousel, \"0e1mEnkRjRFxfshTMb6OFYfw1yA=\");\n_c = HomeCarousel;\nexport default HomeCarousel;\nvar _c;\n$RefreshReg$(_c, \"HomeCarousel\");","map":{"version":3,"names":["React","useEffect","useRef","useState","section1Image","section2Image","section3Image","jsxDEV","_jsxDEV","sectionImages","HomeCarousel","section","_s","canvasRef","currentImage","setCurrentImage","exitingStripsRef","animationRef","sectionNumber","console","log","img","Image","src","onload","width","height","onerror","error","oldImage","current","createExitStrips","canvas","tempCanvas","document","createElement","ctx","getContext","drawImage","stripWidth","strips","i","stripCanvas","stripCtx","push","opacity","startTime","index","length","animate","timestamp","warn","clearRect","debug","forEach","strip","progress","Math","max","globalAlpha","requestAnimationFrame","container","parentElement","updateCanvasSize","clientWidth","clientHeight","resizeObserver","ResizeObserver","entries","observe","unobserve","cancelAnimationFrame","className","children","ref","style","imageRendering","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/johnlemon/portfolio/src/components/HomeCarousel.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport section1Image from '../assets/imgs/carrousel_img_1.jpg';\nimport section2Image from '../assets/imgs/carrousel_img_2.jpg';\nimport section3Image from '../assets/imgs/carrousel_img_3.jpg';\n\nconst sectionImages = {\n  1: section1Image,\n  2: section2Image,\n  3: section3Image\n};\n\nconst HomeCarousel = ({ section }) => {\n  const canvasRef = useRef(null);\n  const [currentImage, setCurrentImage] = useState(null);\n  const exitingStripsRef = useRef([]);\n  const animationRef = useRef(null);\n  const sectionNumber = section + 1;\n\n  console.log('Renderizando HomeCarousel - Sección:', sectionNumber);\n  console.log('Ruta de imagen:', sectionImages[sectionNumber]);\n\n  // Cargar imagen inicial\n  useEffect(() => {\n    console.log('Cargando imagen inicial para sección:', sectionNumber);\n    const img = new Image();\n    img.src = sectionImages[sectionNumber];\n    \n    img.onload = () => {\n      console.log('Imagen cargada:', img.src, 'Dimensiones:', img.width, 'x', img.height);\n      setCurrentImage(img);\n    };\n    \n    img.onerror = () => {\n      console.error('Error al cargar imagen:', sectionImages[sectionNumber]);\n    };\n  }, [sectionNumber]);\n\n  // Manejar cambios de sección\n  useEffect(() => {\n    console.log('Detectado cambio de sección a:', sectionNumber);\n    const img = new Image();\n    img.src = sectionImages[sectionNumber];\n    \n    img.onload = () => {\n      console.log('Nueva imagen cargada:', img.src);\n      const oldImage = currentImage;\n      setCurrentImage(img);\n      \n      if (oldImage && canvasRef.current) {\n        console.log('Creando tiras de salida para transición');\n        createExitStrips(oldImage);\n      }\n    };\n    \n    img.onerror = () => {\n      console.error('Error al cargar nueva imagen:', sectionImages[sectionNumber]);\n    };\n  }, [section]);\n\n  const createExitStrips = (oldImage) => {\n    const canvas = canvasRef.current;\n    console.log('Creando tiras de salida - Canvas dimensions:', canvas.width, 'x', canvas.height);\n    \n    const tempCanvas = document.createElement('canvas');\n    const ctx = tempCanvas.getContext('2d');\n    tempCanvas.width = canvas.width;\n    tempCanvas.height = canvas.height;\n    ctx.drawImage(oldImage, 0, 0, canvas.width, canvas.height);\n\n    const stripWidth = canvas.width / 20;\n    console.log('Ancho de tira calculado:', stripWidth);\n    \n    const strips = [];\n    for (let i = 0; i < 20; i++) {\n      const stripCanvas = document.createElement('canvas');\n      stripCanvas.width = stripWidth;\n      stripCanvas.height = canvas.height;\n      \n      const stripCtx = stripCanvas.getContext('2d');\n      stripCtx.drawImage(\n        tempCanvas,\n        i * stripWidth, 0, stripWidth, canvas.height,\n        0, 0, stripWidth, canvas.height\n      );\n      \n      strips.push({\n        canvas: stripCanvas,\n        opacity: 1,\n        startTime: null,\n        index: i\n      });\n    }\n    \n    exitingStripsRef.current = strips;\n    console.log('Tiras de salida creadas:', strips.length);\n  };\n\n  const animate = (timestamp) => {\n    const canvas = canvasRef.current;\n    if (!canvas) {\n      console.warn('Canvas no disponible en animate');\n      return;\n    }\n\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Dibujar imagen actual\n    if (currentImage) {\n      console.debug('Dibujando imagen actual');\n      ctx.drawImage(currentImage, 0, 0, canvas.width, canvas.height);\n    }\n\n    // Animar tiras de salida\n    exitingStripsRef.current.forEach((strip, index) => {\n      if (!strip.startTime) {\n        strip.startTime = timestamp + index * 50;\n        console.log(`Iniciando animación para tira ${index} en`, strip.startTime);\n      }\n\n      if (timestamp >= strip.startTime) {\n        const progress = (timestamp - strip.startTime) / 500;\n        strip.opacity = Math.max(1 - progress, 0);\n      }\n\n      if (strip.opacity > 0) {\n        ctx.globalAlpha = strip.opacity;\n        ctx.drawImage(strip.canvas, strip.index * strip.canvas.width, 0);\n      }\n    });\n\n    ctx.globalAlpha = 1;\n    animationRef.current = requestAnimationFrame(animate);\n  };\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) {\n      console.error('Canvas ref no está definido');\n      return;\n    }\n\n    const container = canvas.parentElement;\n    console.log('Configurando canvas - Contenedor:', container);\n\n    const updateCanvasSize = () => {\n      canvas.width = container.clientWidth;\n      canvas.height = container.clientHeight;\n      console.log('Tamaño actualizado del canvas:', canvas.width, 'x', canvas.height);\n    };\n\n    updateCanvasSize();\n\n    const resizeObserver = new ResizeObserver((entries) => {\n      console.log('Detectado cambio de tamaño');\n      entries.forEach(updateCanvasSize);\n    });\n\n    resizeObserver.observe(container);\n    animationRef.current = requestAnimationFrame(animate);\n\n    return () => {\n      console.log('Limpiando observador y animación');\n      resizeObserver.unobserve(container);\n      cancelAnimationFrame(animationRef.current);\n    };\n  }, []);\n\n  return (\n    <div className=\"home__carrousel\">\n      <canvas \n        ref={canvasRef} \n        className=\"home__carrousel__canvas\"\n        style={{ imageRendering: 'auto' }} // Valor corregido\n      />\n    </div>\n  );\n};\n\nexport default HomeCarousel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}