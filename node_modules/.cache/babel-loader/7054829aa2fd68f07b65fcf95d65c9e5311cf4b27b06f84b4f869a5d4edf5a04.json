{"ast":null,"code":"var _jsxFileName = \"/home/johnlemon/portfolio/src/components/HomeCarousel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport section1Image from '../assets/imgs/carrousel_img_1.jpg';\nimport section2Image from '../assets/imgs/carrousel_img_2.jpg';\nimport section3Image from '../assets/imgs/carrousel_img_3.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sectionImages = [section1Image, section2Image, section3Image];\nconst NUM_STRIPS = 20;\nconst ANIMATION_DURATION = 250;\nconst STRIP_DELAY = 60;\nconst HomeCarousel = ({\n  section\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [image, setImage] = useState(null);\n  const animationRef = useRef(null);\n  const stripsProgress = useRef(Array(NUM_STRIPS).fill(1));\n  const isAnimating = useRef(false);\n\n  // Easing function para efecto de desaceleración\n  const easeOutCubic = t => {\n    return 1 - Math.pow(1 - t, 3);\n  };\n\n  // Cargar imagen actual (sin cambios)\n  useEffect(() => {\n    const img = new Image();\n    img.src = sectionImages[section];\n    img.onload = () => setImage(img);\n    img.onerror = e => console.error('Error loading image:', e);\n  }, [section]);\n\n  // Modificado: Iniciar desde el row 3 (índice 2)\n  const calculateProgress = (index, startTime) => {\n    const adjustedIndex = (index + 18) % NUM_STRIPS; // Ajuste para empezar desde el índice 2\n    const elapsed = performance.now() - startTime - adjustedIndex * STRIP_DELAY;\n    const rawProgress = Math.min(elapsed / ANIMATION_DURATION, 1);\n    return easeOutCubic(rawProgress);\n  };\n\n  // Animación modificada\n  const animate = startTime => {\n    var _canvasRef$current;\n    const ctx = (_canvasRef$current = canvasRef.current) === null || _canvasRef$current === void 0 ? void 0 : _canvasRef$current.getContext('2d');\n    if (!ctx) return;\n    stripsProgress.current = stripsProgress.current.map((_, index) => {\n      return 1 - calculateProgress(index, startTime);\n    });\n    drawImage(ctx);\n    if (performance.now() - startTime < NUM_STRIPS * STRIP_DELAY + ANIMATION_DURATION) {\n      animationRef.current = requestAnimationFrame(() => animate(startTime));\n    } else {\n      isAnimating.current = false;\n      stripsProgress.current = Array(NUM_STRIPS).fill(1);\n      drawImage(ctx);\n    }\n  };\n\n  // Configurar canvas\n  useEffect(() => {\n    if (!image) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d', {\n      willReadFrequently: true,\n      alpha: true // Fundamental para transparencia\n    });\n    ctx.imageSmoothingEnabled = true;\n    ctx.imageSmoothingQuality = 'high';\n    const container = canvas.parentElement;\n    const setCanvasSize = () => {\n      canvas.width = container.clientWidth * 2;\n      canvas.height = container.clientHeight * 2;\n      canvas.style.width = `${container.clientWidth}px`;\n      canvas.style.height = `${container.clientHeight}px`;\n    };\n    setCanvasSize();\n    drawImage(ctx);\n    const resizeObserver = new ResizeObserver(setCanvasSize);\n    resizeObserver.observe(container);\n    return () => {\n      resizeObserver.disconnect();\n      cancelAnimationFrame(animationRef.current);\n    };\n  }, [image]);\n  const drawImage = ctx => {\n    if (!image || !ctx) return;\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n    // 1. Dibujar la imagen completa\n    ctx.globalAlpha = 1;\n    ctx.globalCompositeOperation = 'source-over';\n    ctx.drawImage(image, 0, 0, ctx.canvas.width, ctx.canvas.height);\n\n    // 2. Aplicar máscara de transparencia\n    ctx.globalCompositeOperation = 'destination-out'; // Esto crea áreas transparentes\n    const stripWidth = ctx.canvas.width / NUM_STRIPS;\n    stripsProgress.current.forEach((progress, index) => {\n      const currentWidth = stripWidth * (1 - progress);\n      if (currentWidth <= 0) return;\n      ctx.fillRect(index * stripWidth + (stripWidth - currentWidth), 0, currentWidth, ctx.canvas.height);\n    });\n\n    // Restaurar modo de composición\n    ctx.globalCompositeOperation = 'source-over';\n  };\n  const startAnimation = () => {\n    if (isAnimating.current) return;\n    isAnimating.current = true;\n    const animate = startTime => {\n      var _canvasRef$current2;\n      const ctx = (_canvasRef$current2 = canvasRef.current) === null || _canvasRef$current2 === void 0 ? void 0 : _canvasRef$current2.getContext('2d');\n      if (!ctx) return;\n      stripsProgress.current = stripsProgress.current.map((_, index) => {\n        const elapsed = performance.now() - startTime - index * STRIP_DELAY;\n        return Math.min(elapsed / ANIMATION_DURATION, 1);\n      });\n      drawImage(ctx);\n      if (performance.now() - startTime < NUM_STRIPS * STRIP_DELAY + ANIMATION_DURATION) {\n        animationRef.current = requestAnimationFrame(() => animate(startTime));\n      } else {\n        isAnimating.current = false;\n        stripsProgress.current = Array(NUM_STRIPS).fill(1);\n        drawImage(ctx);\n      }\n    };\n    animationRef.current = requestAnimationFrame(() => animate(performance.now()));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home__carrousel\",\n    onClick: startAnimation,\n    style: {\n      position: 'relative',\n      cursor: 'pointer',\n      background: 'transparent !important',\n      mixBlendMode: 'multiply'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        background: 'transparent',\n        imageRendering: 'auto'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n_s(HomeCarousel, \"+SFpJ4z468TZ11+ODnKXIOGX1qs=\");\n_c = HomeCarousel;\nexport default HomeCarousel;\nvar _c;\n$RefreshReg$(_c, \"HomeCarousel\");","map":{"version":3,"names":["React","useEffect","useRef","useState","section1Image","section2Image","section3Image","jsxDEV","_jsxDEV","sectionImages","NUM_STRIPS","ANIMATION_DURATION","STRIP_DELAY","HomeCarousel","section","_s","canvasRef","image","setImage","animationRef","stripsProgress","Array","fill","isAnimating","easeOutCubic","t","Math","pow","img","Image","src","onload","onerror","e","console","error","calculateProgress","index","startTime","adjustedIndex","elapsed","performance","now","rawProgress","min","animate","_canvasRef$current","ctx","current","getContext","map","_","drawImage","requestAnimationFrame","canvas","willReadFrequently","alpha","imageSmoothingEnabled","imageSmoothingQuality","container","parentElement","setCanvasSize","width","clientWidth","height","clientHeight","style","resizeObserver","ResizeObserver","observe","disconnect","cancelAnimationFrame","clearRect","globalAlpha","globalCompositeOperation","stripWidth","forEach","progress","currentWidth","fillRect","startAnimation","_canvasRef$current2","className","onClick","position","cursor","background","mixBlendMode","children","ref","imageRendering","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/johnlemon/portfolio/src/components/HomeCarousel.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport section1Image from '../assets/imgs/carrousel_img_1.jpg';\nimport section2Image from '../assets/imgs/carrousel_img_2.jpg';\nimport section3Image from '../assets/imgs/carrousel_img_3.jpg';\n\nconst sectionImages = [section1Image, section2Image, section3Image];\nconst NUM_STRIPS = 20;\nconst ANIMATION_DURATION = 250;\nconst STRIP_DELAY = 60;\n\nconst HomeCarousel = ({ section }) => {\n  const canvasRef = useRef(null);\n  const [image, setImage] = useState(null);\n  const animationRef = useRef(null);\n  const stripsProgress = useRef(Array(NUM_STRIPS).fill(1));\n  const isAnimating = useRef(false);\n\n  // Easing function para efecto de desaceleración\n  const easeOutCubic = (t) => {\n    return 1 - Math.pow(1 - t, 3);\n  };\n\n  // Cargar imagen actual (sin cambios)\n  useEffect(() => {\n    const img = new Image();\n    img.src = sectionImages[section];\n    img.onload = () => setImage(img);\n    img.onerror = (e) => console.error('Error loading image:', e);\n  }, [section]);\n\n  // Modificado: Iniciar desde el row 3 (índice 2)\n  const calculateProgress = (index, startTime) => {\n    const adjustedIndex = (index + 18) % NUM_STRIPS; // Ajuste para empezar desde el índice 2\n    const elapsed = performance.now() - startTime - (adjustedIndex * STRIP_DELAY);\n    const rawProgress = Math.min(elapsed / ANIMATION_DURATION, 1);\n    return easeOutCubic(rawProgress);\n  };\n\n  // Animación modificada\n  const animate = (startTime) => {\n    const ctx = canvasRef.current?.getContext('2d');\n    if (!ctx) return;\n\n    stripsProgress.current = stripsProgress.current.map((_, index) => {\n      return 1 - calculateProgress(index, startTime);\n    });\n\n    drawImage(ctx);\n\n    if (performance.now() - startTime < (NUM_STRIPS * STRIP_DELAY) + ANIMATION_DURATION) {\n      animationRef.current = requestAnimationFrame(() => animate(startTime));\n    } else {\n      isAnimating.current = false;\n      stripsProgress.current = Array(NUM_STRIPS).fill(1);\n      drawImage(ctx);\n    }\n  };\n\n\n  // Configurar canvas\n  useEffect(() => {\n    if (!image) return;\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d', { \n      willReadFrequently: true,\n      alpha: true // Fundamental para transparencia\n    });\n    \n    ctx.imageSmoothingEnabled = true;\n    ctx.imageSmoothingQuality = 'high';\n\n    const container = canvas.parentElement;\n    \n    const setCanvasSize = () => {\n      canvas.width = container.clientWidth * 2;\n      canvas.height = container.clientHeight * 2;\n      canvas.style.width = `${container.clientWidth}px`;\n      canvas.style.height = `${container.clientHeight}px`;\n    };\n\n    setCanvasSize();\n    drawImage(ctx);\n\n    const resizeObserver = new ResizeObserver(setCanvasSize);\n    resizeObserver.observe(container);\n\n    return () => {\n      resizeObserver.disconnect();\n      cancelAnimationFrame(animationRef.current);\n    };\n  }, [image]);\n\n  const drawImage = (ctx) => {\n    if (!image || !ctx) return;\n\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    \n    // 1. Dibujar la imagen completa\n    ctx.globalAlpha = 1;\n    ctx.globalCompositeOperation = 'source-over';\n    ctx.drawImage(image, 0, 0, ctx.canvas.width, ctx.canvas.height);\n    \n    // 2. Aplicar máscara de transparencia\n    ctx.globalCompositeOperation = 'destination-out'; // Esto crea áreas transparentes\n    const stripWidth = ctx.canvas.width / NUM_STRIPS;\n    \n    stripsProgress.current.forEach((progress, index) => {\n      const currentWidth = stripWidth * (1 - progress);\n      if (currentWidth <= 0) return;\n      \n      ctx.fillRect(\n        index * stripWidth + (stripWidth - currentWidth),\n        0,\n        currentWidth,\n        ctx.canvas.height\n      );\n    });\n\n    // Restaurar modo de composición\n    ctx.globalCompositeOperation = 'source-over';\n  };\n\n  const startAnimation = () => {\n    if (isAnimating.current) return;\n    isAnimating.current = true;\n\n    const animate = (startTime) => {\n      const ctx = canvasRef.current?.getContext('2d');\n      if (!ctx) return;\n\n      stripsProgress.current = stripsProgress.current.map((_, index) => {\n        const elapsed = performance.now() - startTime - (index * STRIP_DELAY);\n        return Math.min(elapsed / ANIMATION_DURATION, 1);\n      });\n\n      drawImage(ctx);\n\n      if (performance.now() - startTime < (NUM_STRIPS * STRIP_DELAY) + ANIMATION_DURATION) {\n        animationRef.current = requestAnimationFrame(() => animate(startTime));\n      } else {\n        isAnimating.current = false;\n        stripsProgress.current = Array(NUM_STRIPS).fill(1);\n        drawImage(ctx);\n      }\n    };\n\n    animationRef.current = requestAnimationFrame(() => animate(performance.now()));\n  };\n\n  return (\n    <div \n      className=\"home__carrousel\" \n      onClick={startAnimation}\n      style={{ \n        position: 'relative',\n        cursor: 'pointer',\n        background: 'transparent !important',\n        mixBlendMode: 'multiply'\n      }}\n    >\n      <canvas \n        ref={canvasRef}\n        style={{ \n          background: 'transparent',\n          imageRendering: 'auto'\n        }}\n      />\n    </div>\n  );\n};\n\nexport default HomeCarousel;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,aAAa,MAAM,oCAAoC;AAC9D,OAAOC,aAAa,MAAM,oCAAoC;AAC9D,OAAOC,aAAa,MAAM,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,MAAMC,aAAa,GAAG,CAACL,aAAa,EAAEC,aAAa,EAAEC,aAAa,CAAC;AACnE,MAAMI,UAAU,GAAG,EAAE;AACrB,MAAMC,kBAAkB,GAAG,GAAG;AAC9B,MAAMC,WAAW,GAAG,EAAE;AAEtB,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAMC,SAAS,GAAGd,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMgB,YAAY,GAAGjB,MAAM,CAAC,IAAI,CAAC;EACjC,MAAMkB,cAAc,GAAGlB,MAAM,CAACmB,KAAK,CAACX,UAAU,CAAC,CAACY,IAAI,CAAC,CAAC,CAAC,CAAC;EACxD,MAAMC,WAAW,GAAGrB,MAAM,CAAC,KAAK,CAAC;;EAEjC;EACA,MAAMsB,YAAY,GAAIC,CAAC,IAAK;IAC1B,OAAO,CAAC,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGF,CAAC,EAAE,CAAC,CAAC;EAC/B,CAAC;;EAED;EACAxB,SAAS,CAAC,MAAM;IACd,MAAM2B,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;IACvBD,GAAG,CAACE,GAAG,GAAGrB,aAAa,CAACK,OAAO,CAAC;IAChCc,GAAG,CAACG,MAAM,GAAG,MAAMb,QAAQ,CAACU,GAAG,CAAC;IAChCA,GAAG,CAACI,OAAO,GAAIC,CAAC,IAAKC,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEF,CAAC,CAAC;EAC/D,CAAC,EAAE,CAACnB,OAAO,CAAC,CAAC;;EAEb;EACA,MAAMsB,iBAAiB,GAAGA,CAACC,KAAK,EAAEC,SAAS,KAAK;IAC9C,MAAMC,aAAa,GAAG,CAACF,KAAK,GAAG,EAAE,IAAI3B,UAAU,CAAC,CAAC;IACjD,MAAM8B,OAAO,GAAGC,WAAW,CAACC,GAAG,CAAC,CAAC,GAAGJ,SAAS,GAAIC,aAAa,GAAG3B,WAAY;IAC7E,MAAM+B,WAAW,GAAGjB,IAAI,CAACkB,GAAG,CAACJ,OAAO,GAAG7B,kBAAkB,EAAE,CAAC,CAAC;IAC7D,OAAOa,YAAY,CAACmB,WAAW,CAAC;EAClC,CAAC;;EAED;EACA,MAAME,OAAO,GAAIP,SAAS,IAAK;IAAA,IAAAQ,kBAAA;IAC7B,MAAMC,GAAG,IAAAD,kBAAA,GAAG9B,SAAS,CAACgC,OAAO,cAAAF,kBAAA,uBAAjBA,kBAAA,CAAmBG,UAAU,CAAC,IAAI,CAAC;IAC/C,IAAI,CAACF,GAAG,EAAE;IAEV3B,cAAc,CAAC4B,OAAO,GAAG5B,cAAc,CAAC4B,OAAO,CAACE,GAAG,CAAC,CAACC,CAAC,EAAEd,KAAK,KAAK;MAChE,OAAO,CAAC,GAAGD,iBAAiB,CAACC,KAAK,EAAEC,SAAS,CAAC;IAChD,CAAC,CAAC;IAEFc,SAAS,CAACL,GAAG,CAAC;IAEd,IAAIN,WAAW,CAACC,GAAG,CAAC,CAAC,GAAGJ,SAAS,GAAI5B,UAAU,GAAGE,WAAW,GAAID,kBAAkB,EAAE;MACnFQ,YAAY,CAAC6B,OAAO,GAAGK,qBAAqB,CAAC,MAAMR,OAAO,CAACP,SAAS,CAAC,CAAC;IACxE,CAAC,MAAM;MACLf,WAAW,CAACyB,OAAO,GAAG,KAAK;MAC3B5B,cAAc,CAAC4B,OAAO,GAAG3B,KAAK,CAACX,UAAU,CAAC,CAACY,IAAI,CAAC,CAAC,CAAC;MAClD8B,SAAS,CAACL,GAAG,CAAC;IAChB;EACF,CAAC;;EAGD;EACA9C,SAAS,CAAC,MAAM;IACd,IAAI,CAACgB,KAAK,EAAE;IAEZ,MAAMqC,MAAM,GAAGtC,SAAS,CAACgC,OAAO;IAChC,MAAMD,GAAG,GAAGO,MAAM,CAACL,UAAU,CAAC,IAAI,EAAE;MAClCM,kBAAkB,EAAE,IAAI;MACxBC,KAAK,EAAE,IAAI,CAAC;IACd,CAAC,CAAC;IAEFT,GAAG,CAACU,qBAAqB,GAAG,IAAI;IAChCV,GAAG,CAACW,qBAAqB,GAAG,MAAM;IAElC,MAAMC,SAAS,GAAGL,MAAM,CAACM,aAAa;IAEtC,MAAMC,aAAa,GAAGA,CAAA,KAAM;MAC1BP,MAAM,CAACQ,KAAK,GAAGH,SAAS,CAACI,WAAW,GAAG,CAAC;MACxCT,MAAM,CAACU,MAAM,GAAGL,SAAS,CAACM,YAAY,GAAG,CAAC;MAC1CX,MAAM,CAACY,KAAK,CAACJ,KAAK,GAAI,GAAEH,SAAS,CAACI,WAAY,IAAG;MACjDT,MAAM,CAACY,KAAK,CAACF,MAAM,GAAI,GAAEL,SAAS,CAACM,YAAa,IAAG;IACrD,CAAC;IAEDJ,aAAa,CAAC,CAAC;IACfT,SAAS,CAACL,GAAG,CAAC;IAEd,MAAMoB,cAAc,GAAG,IAAIC,cAAc,CAACP,aAAa,CAAC;IACxDM,cAAc,CAACE,OAAO,CAACV,SAAS,CAAC;IAEjC,OAAO,MAAM;MACXQ,cAAc,CAACG,UAAU,CAAC,CAAC;MAC3BC,oBAAoB,CAACpD,YAAY,CAAC6B,OAAO,CAAC;IAC5C,CAAC;EACH,CAAC,EAAE,CAAC/B,KAAK,CAAC,CAAC;EAEX,MAAMmC,SAAS,GAAIL,GAAG,IAAK;IACzB,IAAI,CAAC9B,KAAK,IAAI,CAAC8B,GAAG,EAAE;IAEpBA,GAAG,CAACyB,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEzB,GAAG,CAACO,MAAM,CAACQ,KAAK,EAAEf,GAAG,CAACO,MAAM,CAACU,MAAM,CAAC;;IAExD;IACAjB,GAAG,CAAC0B,WAAW,GAAG,CAAC;IACnB1B,GAAG,CAAC2B,wBAAwB,GAAG,aAAa;IAC5C3B,GAAG,CAACK,SAAS,CAACnC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE8B,GAAG,CAACO,MAAM,CAACQ,KAAK,EAAEf,GAAG,CAACO,MAAM,CAACU,MAAM,CAAC;;IAE/D;IACAjB,GAAG,CAAC2B,wBAAwB,GAAG,iBAAiB,CAAC,CAAC;IAClD,MAAMC,UAAU,GAAG5B,GAAG,CAACO,MAAM,CAACQ,KAAK,GAAGpD,UAAU;IAEhDU,cAAc,CAAC4B,OAAO,CAAC4B,OAAO,CAAC,CAACC,QAAQ,EAAExC,KAAK,KAAK;MAClD,MAAMyC,YAAY,GAAGH,UAAU,IAAI,CAAC,GAAGE,QAAQ,CAAC;MAChD,IAAIC,YAAY,IAAI,CAAC,EAAE;MAEvB/B,GAAG,CAACgC,QAAQ,CACV1C,KAAK,GAAGsC,UAAU,IAAIA,UAAU,GAAGG,YAAY,CAAC,EAChD,CAAC,EACDA,YAAY,EACZ/B,GAAG,CAACO,MAAM,CAACU,MACb,CAAC;IACH,CAAC,CAAC;;IAEF;IACAjB,GAAG,CAAC2B,wBAAwB,GAAG,aAAa;EAC9C,CAAC;EAED,MAAMM,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAIzD,WAAW,CAACyB,OAAO,EAAE;IACzBzB,WAAW,CAACyB,OAAO,GAAG,IAAI;IAE1B,MAAMH,OAAO,GAAIP,SAAS,IAAK;MAAA,IAAA2C,mBAAA;MAC7B,MAAMlC,GAAG,IAAAkC,mBAAA,GAAGjE,SAAS,CAACgC,OAAO,cAAAiC,mBAAA,uBAAjBA,mBAAA,CAAmBhC,UAAU,CAAC,IAAI,CAAC;MAC/C,IAAI,CAACF,GAAG,EAAE;MAEV3B,cAAc,CAAC4B,OAAO,GAAG5B,cAAc,CAAC4B,OAAO,CAACE,GAAG,CAAC,CAACC,CAAC,EAAEd,KAAK,KAAK;QAChE,MAAMG,OAAO,GAAGC,WAAW,CAACC,GAAG,CAAC,CAAC,GAAGJ,SAAS,GAAID,KAAK,GAAGzB,WAAY;QACrE,OAAOc,IAAI,CAACkB,GAAG,CAACJ,OAAO,GAAG7B,kBAAkB,EAAE,CAAC,CAAC;MAClD,CAAC,CAAC;MAEFyC,SAAS,CAACL,GAAG,CAAC;MAEd,IAAIN,WAAW,CAACC,GAAG,CAAC,CAAC,GAAGJ,SAAS,GAAI5B,UAAU,GAAGE,WAAW,GAAID,kBAAkB,EAAE;QACnFQ,YAAY,CAAC6B,OAAO,GAAGK,qBAAqB,CAAC,MAAMR,OAAO,CAACP,SAAS,CAAC,CAAC;MACxE,CAAC,MAAM;QACLf,WAAW,CAACyB,OAAO,GAAG,KAAK;QAC3B5B,cAAc,CAAC4B,OAAO,GAAG3B,KAAK,CAACX,UAAU,CAAC,CAACY,IAAI,CAAC,CAAC,CAAC;QAClD8B,SAAS,CAACL,GAAG,CAAC;MAChB;IACF,CAAC;IAED5B,YAAY,CAAC6B,OAAO,GAAGK,qBAAqB,CAAC,MAAMR,OAAO,CAACJ,WAAW,CAACC,GAAG,CAAC,CAAC,CAAC,CAAC;EAChF,CAAC;EAED,oBACElC,OAAA;IACE0E,SAAS,EAAC,iBAAiB;IAC3BC,OAAO,EAAEH,cAAe;IACxBd,KAAK,EAAE;MACLkB,QAAQ,EAAE,UAAU;MACpBC,MAAM,EAAE,SAAS;MACjBC,UAAU,EAAE,wBAAwB;MACpCC,YAAY,EAAE;IAChB,CAAE;IAAAC,QAAA,eAEFhF,OAAA;MACEiF,GAAG,EAAEzE,SAAU;MACfkD,KAAK,EAAE;QACLoB,UAAU,EAAE,aAAa;QACzBI,cAAc,EAAE;MAClB;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC/E,EAAA,CAhKIF,YAAY;AAAAkF,EAAA,GAAZlF,YAAY;AAkKlB,eAAeA,YAAY;AAAC,IAAAkF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}