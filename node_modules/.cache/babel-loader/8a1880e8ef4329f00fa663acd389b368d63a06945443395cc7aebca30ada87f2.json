{"ast":null,"code":"var _jsxFileName = \"/home/johnlemon/portfolio/src/components/HomeCarousel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport section1Image from '../assets/imgs/carrousel_img_1.jpg';\nimport section2Image from '../assets/imgs/carrousel_img_2.jpg';\nimport section3Image from '../assets/imgs/carrousel_img_3.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sectionImages = [section1Image, section2Image, section3Image];\nconst NUM_STRIPS = 20;\nconst ANIMATION_DURATION = 400;\nconst STRIP_DELAY = 40;\nconst HomeCarousel = ({\n  section\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [image, setImage] = useState(null);\n  const animationRef = useRef(null);\n  const stripsProgress = useRef(Array(NUM_STRIPS).fill(1)); // Iniciar completamente revelado\n  const isAnimating = useRef(false);\n\n  // Cargar imagen actual\n  useEffect(() => {\n    const img = new Image();\n    img.src = sectionImages[section];\n    img.onload = () => {\n      setImage(img);\n      drawInitialState();\n    };\n    img.onerror = e => console.error('Error loading image:', e);\n  }, [section]);\n  const drawInitialState = () => {\n    var _canvasRef$current;\n    const ctx = (_canvasRef$current = canvasRef.current) === null || _canvasRef$current === void 0 ? void 0 : _canvasRef$current.getContext('2d');\n    if (!ctx) return;\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    stripsProgress.current = Array(NUM_STRIPS).fill(1);\n    drawImage(ctx);\n  };\n\n  // Configurar canvas\n  useEffect(() => {\n    if (!image) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d', {\n      willReadFrequently: true,\n      alpha: true // Fundamental para transparencia\n    });\n    ctx.imageSmoothingEnabled = true;\n    ctx.imageSmoothingQuality = 'high';\n    const container = canvas.parentElement;\n    const setCanvasSize = () => {\n      canvas.width = container.clientWidth * 2;\n      canvas.height = container.clientHeight * 2;\n      canvas.style.width = `${container.clientWidth}px`;\n      canvas.style.height = `${container.clientHeight}px`;\n    };\n    setCanvasSize();\n    drawImage(ctx);\n    const resizeObserver = new ResizeObserver(setCanvasSize);\n    resizeObserver.observe(container);\n    return () => {\n      resizeObserver.disconnect();\n      cancelAnimationFrame(animationRef.current);\n    };\n  }, [image]);\n  const drawImage = ctx => {\n    if (!image || !ctx) return;\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n    // 1. Dibujar la imagen completa\n    ctx.globalAlpha = 1;\n    ctx.globalCompositeOperation = 'source-over';\n    ctx.drawImage(image, 0, 0, ctx.canvas.width, ctx.canvas.height);\n\n    // 2. Aplicar máscara de transparencia\n    ctx.globalCompositeOperation = 'destination-out'; // Esto crea áreas transparentes\n    const stripWidth = ctx.canvas.width / NUM_STRIPS;\n    stripsProgress.current.forEach((progress, index) => {\n      const currentWidth = stripWidth * (1 - progress);\n      if (currentWidth <= 0) return;\n      ctx.fillRect(index * stripWidth + (stripWidth - currentWidth), 0, currentWidth, ctx.canvas.height);\n    });\n\n    // Restaurar modo de composición\n    ctx.globalCompositeOperation = 'source-over';\n  };\n  const startAnimation = () => {\n    if (isAnimating.current) return;\n    isAnimating.current = true;\n    const animate = startTime => {\n      var _canvasRef$current2;\n      const ctx = (_canvasRef$current2 = canvasRef.current) === null || _canvasRef$current2 === void 0 ? void 0 : _canvasRef$current2.getContext('2d');\n      if (!ctx) return;\n      stripsProgress.current = stripsProgress.current.map((_, index) => {\n        const elapsed = performance.now() - startTime - index * STRIP_DELAY;\n        return Math.min(elapsed / ANIMATION_DURATION, 1);\n      });\n      drawImage(ctx);\n      if (performance.now() - startTime < NUM_STRIPS * STRIP_DELAY + ANIMATION_DURATION) {\n        animationRef.current = requestAnimationFrame(() => animate(startTime));\n      } else {\n        isAnimating.current = false;\n        stripsProgress.current = Array(NUM_STRIPS).fill(1);\n        drawImage(ctx);\n      }\n    };\n    animationRef.current = requestAnimationFrame(() => animate(performance.now()));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home__carrousel\",\n    onClick: startAnimation,\n    style: {\n      position: 'relative',\n      cursor: 'pointer',\n      background: 'transparent !important',\n      mixBlendMode: 'multiply' // Opcional: para mejor integración con el fondo\n    },\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        background: 'transparent',\n        imageRendering: 'auto'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n_s(HomeCarousel, \"+SFpJ4z468TZ11+ODnKXIOGX1qs=\");\n_c = HomeCarousel;\nexport default HomeCarousel;\nvar _c;\n$RefreshReg$(_c, \"HomeCarousel\");","map":{"version":3,"names":["React","useEffect","useRef","useState","section1Image","section2Image","section3Image","jsxDEV","_jsxDEV","sectionImages","NUM_STRIPS","ANIMATION_DURATION","STRIP_DELAY","HomeCarousel","section","_s","canvasRef","image","setImage","animationRef","stripsProgress","Array","fill","isAnimating","img","Image","src","onload","drawInitialState","onerror","e","console","error","_canvasRef$current","ctx","current","getContext","clearRect","canvas","width","height","drawImage","willReadFrequently","alpha","imageSmoothingEnabled","imageSmoothingQuality","container","parentElement","setCanvasSize","clientWidth","clientHeight","style","resizeObserver","ResizeObserver","observe","disconnect","cancelAnimationFrame","globalAlpha","globalCompositeOperation","stripWidth","forEach","progress","index","currentWidth","fillRect","startAnimation","animate","startTime","_canvasRef$current2","map","_","elapsed","performance","now","Math","min","requestAnimationFrame","className","onClick","position","cursor","background","mixBlendMode","children","ref","imageRendering","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/johnlemon/portfolio/src/components/HomeCarousel.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport section1Image from '../assets/imgs/carrousel_img_1.jpg';\nimport section2Image from '../assets/imgs/carrousel_img_2.jpg';\nimport section3Image from '../assets/imgs/carrousel_img_3.jpg';\n\nconst sectionImages = [section1Image, section2Image, section3Image];\nconst NUM_STRIPS = 20;\nconst ANIMATION_DURATION = 400;\nconst STRIP_DELAY = 40;\n\nconst HomeCarousel = ({ section }) => {\n  const canvasRef = useRef(null);\n  const [image, setImage] = useState(null);\n  const animationRef = useRef(null);\n  const stripsProgress = useRef(Array(NUM_STRIPS).fill(1)); // Iniciar completamente revelado\n  const isAnimating = useRef(false);\n\n  // Cargar imagen actual\n  useEffect(() => {\n    const img = new Image();\n    img.src = sectionImages[section];\n    img.onload = () => {\n      setImage(img);\n      drawInitialState();\n    };\n    img.onerror = (e) => console.error('Error loading image:', e);\n  }, [section]);\n\n  const drawInitialState = () => {\n    const ctx = canvasRef.current?.getContext('2d');\n    if (!ctx) return;\n\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    stripsProgress.current = Array(NUM_STRIPS).fill(1);\n    drawImage(ctx);\n  };\n\n  // Configurar canvas\n  useEffect(() => {\n    if (!image) return;\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d', { \n      willReadFrequently: true,\n      alpha: true // Fundamental para transparencia\n    });\n    \n    ctx.imageSmoothingEnabled = true;\n    ctx.imageSmoothingQuality = 'high';\n\n    const container = canvas.parentElement;\n    \n    const setCanvasSize = () => {\n      canvas.width = container.clientWidth * 2;\n      canvas.height = container.clientHeight * 2;\n      canvas.style.width = `${container.clientWidth}px`;\n      canvas.style.height = `${container.clientHeight}px`;\n    };\n\n    setCanvasSize();\n    drawImage(ctx);\n\n    const resizeObserver = new ResizeObserver(setCanvasSize);\n    resizeObserver.observe(container);\n\n    return () => {\n      resizeObserver.disconnect();\n      cancelAnimationFrame(animationRef.current);\n    };\n  }, [image]);\n\n  const drawImage = (ctx) => {\n    if (!image || !ctx) return;\n\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    \n    // 1. Dibujar la imagen completa\n    ctx.globalAlpha = 1;\n    ctx.globalCompositeOperation = 'source-over';\n    ctx.drawImage(image, 0, 0, ctx.canvas.width, ctx.canvas.height);\n    \n    // 2. Aplicar máscara de transparencia\n    ctx.globalCompositeOperation = 'destination-out'; // Esto crea áreas transparentes\n    const stripWidth = ctx.canvas.width / NUM_STRIPS;\n    \n    stripsProgress.current.forEach((progress, index) => {\n      const currentWidth = stripWidth * (1 - progress);\n      if (currentWidth <= 0) return;\n      \n      ctx.fillRect(\n        index * stripWidth + (stripWidth - currentWidth),\n        0,\n        currentWidth,\n        ctx.canvas.height\n      );\n    });\n\n    // Restaurar modo de composición\n    ctx.globalCompositeOperation = 'source-over';\n  };\n\n  const startAnimation = () => {\n    if (isAnimating.current) return;\n    isAnimating.current = true;\n\n    const animate = (startTime) => {\n      const ctx = canvasRef.current?.getContext('2d');\n      if (!ctx) return;\n\n      stripsProgress.current = stripsProgress.current.map((_, index) => {\n        const elapsed = performance.now() - startTime - (index * STRIP_DELAY);\n        return Math.min(elapsed / ANIMATION_DURATION, 1);\n      });\n\n      drawImage(ctx);\n\n      if (performance.now() - startTime < (NUM_STRIPS * STRIP_DELAY) + ANIMATION_DURATION) {\n        animationRef.current = requestAnimationFrame(() => animate(startTime));\n      } else {\n        isAnimating.current = false;\n        stripsProgress.current = Array(NUM_STRIPS).fill(1);\n        drawImage(ctx);\n      }\n    };\n\n    animationRef.current = requestAnimationFrame(() => animate(performance.now()));\n  };\n\n  return (\n    <div \n      className=\"home__carrousel\" \n      onClick={startAnimation}\n      style={{ \n        position: 'relative',\n        cursor: 'pointer',\n        background: 'transparent !important',\n        mixBlendMode: 'multiply' // Opcional: para mejor integración con el fondo\n      }}\n    >\n      <canvas \n        ref={canvasRef}\n        style={{ \n          background: 'transparent',\n          imageRendering: 'auto'\n        }}\n      />\n    </div>\n  );\n};\n\nexport default HomeCarousel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}